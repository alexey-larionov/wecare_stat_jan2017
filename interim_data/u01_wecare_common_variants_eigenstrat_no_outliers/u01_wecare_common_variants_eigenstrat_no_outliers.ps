%!PS-Adobe-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri Feb 10 10:35:42 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Alexey Larionov)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Feb 10 10:35:42 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
854 448 M
63 0 V
5254 0 R
-63 0 V
770 448 M
(-0.5) Rshow
1.000 UL
LTb
854 1185 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
(-0.4) Rshow
1.000 UL
LTb
854 1923 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
(-0.3) Rshow
1.000 UL
LTb
854 2660 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
(-0.2) Rshow
1.000 UL
LTb
854 3397 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
(-0.1) Rshow
1.000 UL
LTb
854 4135 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0) Rshow
1.000 UL
LTb
854 4872 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.1) Rshow
1.000 UL
LTb
854 448 M
0 63 V
0 4361 R
0 -63 V
854 308 M
(-0.2) Cshow
1.000 UL
LTb
1740 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.15) Cshow
1.000 UL
LTb
2626 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.1) Cshow
1.000 UL
LTb
3512 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.05) Cshow
1.000 UL
LTb
4399 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0) Cshow
1.000 UL
LTb
5285 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.05) Cshow
1.000 UL
LTb
6171 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.1) Cshow
1.000 UL
LTb
1.000 UL
LTb
854 4872 N
854 448 L
5317 0 V
0 4424 V
-5317 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(eigenvector 2) Cshow
grestore
LTb
LCb setrgbcolor
3512 98 M
(eigenvector 1) Cshow
LTb
3512 4802 M
() Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6549 4802 M
(UBC) Rshow
LT0
4716 4091 Pls
4847 4138 Pls
4181 4330 Pls
4727 3946 Pls
4688 4174 Pls
4376 4218 Pls
4473 4174 Pls
4613 4471 Pls
4707 3922 Pls
4535 4212 Pls
2812 2240 Pls
4675 4285 Pls
4298 4360 Pls
2314 4563 Pls
2304 2395 Pls
4851 4463 Pls
4634 4365 Pls
4679 4181 Pls
4314 4084 Pls
4331 4131 Pls
1653 4605 Pls
2490 2266 Pls
5191 4043 Pls
3493 3310 Pls
1940 4472 Pls
2394 4433 Pls
4820 4363 Pls
4909 3923 Pls
4675 4132 Pls
4168 3810 Pls
4521 4119 Pls
4812 4149 Pls
2499 4241 Pls
4675 4370 Pls
2027 4518 Pls
4847 4073 Pls
4778 4343 Pls
4583 4063 Pls
4712 4249 Pls
4523 4051 Pls
4952 4046 Pls
3048 4323 Pls
3734 4283 Pls
4369 4071 Pls
4960 3984 Pls
3833 4231 Pls
4900 4383 Pls
3886 3960 Pls
5049 3984 Pls
4698 4492 Pls
4735 3968 Pls
4353 4334 Pls
4661 3860 Pls
4365 4188 Pls
4808 4420 Pls
4620 4354 Pls
4475 3927 Pls
4937 4167 Pls
4769 4385 Pls
3403 4568 Pls
4815 3857 Pls
4895 3992 Pls
3711 4259 Pls
4608 4279 Pls
5060 4015 Pls
4971 4354 Pls
4058 4281 Pls
4400 3977 Pls
2541 2737 Pls
4372 4075 Pls
4516 4101 Pls
4686 4585 Pls
5409 4435 Pls
4555 4017 Pls
4953 3790 Pls
4353 4292 Pls
2217 4635 Pls
4461 4021 Pls
4764 4110 Pls
4610 4708 Pls
4742 4100 Pls
4507 4015 Pls
4702 4096 Pls
4572 4118 Pls
5042 4287 Pls
5021 3977 Pls
2073 4828 Pls
4785 4040 Pls
4425 4342 Pls
2681 4316 Pls
4785 4035 Pls
4840 4208 Pls
4767 4394 Pls
4181 4177 Pls
4427 4166 Pls
4494 4344 Pls
4478 4068 Pls
1962 4702 Pls
4620 4186 Pls
4831 3950 Pls
4638 4166 Pls
4594 4181 Pls
1561 4450 Pls
1407 4713 Pls
4555 4374 Pls
4512 4291 Pls
4328 3989 Pls
4540 3991 Pls
4471 4208 Pls
4299 3972 Pls
4991 4211 Pls
4112 4246 Pls
1809 4481 Pls
4390 4220 Pls
4766 3821 Pls
4572 4236 Pls
4551 4330 Pls
4813 4424 Pls
4579 4012 Pls
4574 4440 Pls
4790 3935 Pls
5157 4053 Pls
4558 4276 Pls
4415 4030 Pls
2850 4793 Pls
4310 4135 Pls
4347 3873 Pls
4649 4465 Pls
5124 4094 Pls
4874 3961 Pls
3993 3908 Pls
4587 3921 Pls
4406 4420 Pls
4209 4153 Pls
3720 4188 Pls
4618 3865 Pls
4305 4270 Pls
4849 4158 Pls
3357 4484 Pls
5008 3955 Pls
4813 3939 Pls
4925 3998 Pls
1595 4705 Pls
4760 3739 Pls
4500 4111 Pls
4650 4232 Pls
4955 4371 Pls
4647 4071 Pls
4436 4012 Pls
4960 3996 Pls
4402 4017 Pls
4356 4688 Pls
4700 4256 Pls
5008 4225 Pls
3865 3241 Pls
4266 4045 Pls
2660 4357 Pls
3266 4363 Pls
3498 3902 Pls
4402 4065 Pls
4867 4131 Pls
5161 4099 Pls
2447 4410 Pls
4689 4101 Pls
4397 4116 Pls
4602 3933 Pls
4650 4205 Pls
4891 3971 Pls
5093 4226 Pls
4847 4134 Pls
4945 4043 Pls
4874 3839 Pls
3860 4443 Pls
5081 4167 Pls
5303 4036 Pls
5085 3959 Pls
4797 4061 Pls
4803 4271 Pls
4805 4097 Pls
4587 4051 Pls
4789 4371 Pls
4709 4261 Pls
5083 4371 Pls
4480 4174 Pls
2045 4499 Pls
4682 4174 Pls
4898 3919 Pls
4750 4135 Pls
4989 4054 Pls
4650 4213 Pls
5303 4171 Pls
4879 4145 Pls
4696 3984 Pls
4521 3935 Pls
4888 4251 Pls
4491 4139 Pls
4893 3869 Pls
4746 3941 Pls
4510 4054 Pls
4548 4066 Pls
4213 4402 Pls
4159 4110 Pls
4388 4396 Pls
4888 4246 Pls
4922 4140 Pls
2757 3444 Pls
4229 4083 Pls
4234 4002 Pls
5040 4019 Pls
4831 4329 Pls
4872 4013 Pls
4510 4003 Pls
4828 3984 Pls
4769 4284 Pls
4934 3987 Pls
4103 4061 Pls
2431 4503 Pls
4643 4275 Pls
4922 4036 Pls
4806 4121 Pls
4544 4062 Pls
4652 3964 Pls
4822 4038 Pls
5104 4312 Pls
4907 4078 Pls
4645 4261 Pls
4640 4079 Pls
4647 4068 Pls
5104 4014 Pls
4500 4174 Pls
4999 4121 Pls
4758 4106 Pls
1793 4427 Pls
4964 4548 Pls
4895 4060 Pls
4585 4139 Pls
4597 3950 Pls
4712 3929 Pls
4264 4017 Pls
2293 4438 Pls
4289 4307 Pls
4964 3995 Pls
4902 4402 Pls
4822 3944 Pls
4877 3877 Pls
6832 4802 Pls
1.000 UP
1.000 UL
LT1
LTb
6549 4662 M
(CBC) Rshow
LT1
1644 4717 Crs
2077 4812 Crs
4305 4057 Crs
4321 4137 Crs
4652 3902 Crs
4634 3992 Crs
4813 4598 Crs
1882 4396 Crs
4893 4330 Crs
4489 3964 Crs
4273 4006 Crs
4544 4149 Crs
4737 4428 Crs
4454 4220 Crs
4397 4006 Crs
2398 2686 Crs
1636 4791 Crs
4673 4132 Crs
3211 4365 Crs
1802 4483 Crs
1207 4311 Crs
4757 3919 Crs
4702 4059 Crs
5042 4136 Crs
4914 4147 Crs
4881 3930 Crs
4498 4115 Crs
4826 3990 Crs
4829 3874 Crs
4886 4063 Crs
4537 4109 Crs
4930 4312 Crs
4973 4500 Crs
4741 4127 Crs
2353 4483 Crs
4422 4140 Crs
4606 4009 Crs
5140 4660 Crs
4344 3916 Crs
4789 3944 Crs
4615 3957 Crs
4996 4040 Crs
4677 4197 Crs
4353 4211 Crs
4996 4256 Crs
4447 4026 Crs
4021 4045 Crs
1910 4522 Crs
4452 4066 Crs
4911 4260 Crs
4776 4121 Crs
4684 4096 Crs
4597 4014 Crs
4007 4028 Crs
4771 3843 Crs
4422 4251 Crs
4026 4101 Crs
4693 3736 Crs
4943 4197 Crs
4835 4223 Crs
4416 4213 Crs
4477 4075 Crs
4291 4068 Crs
4727 4064 Crs
2127 4701 Crs
5001 4020 Crs
3998 4386 Crs
4820 4250 Crs
4172 3393 Crs
5046 4261 Crs
4689 4097 Crs
4718 4126 Crs
3874 4148 Crs
5024 3912 Crs
4925 4324 Crs
4558 4044 Crs
4581 4084 Crs
4939 4045 Crs
4448 4399 Crs
1811 4355 Crs
4711 4481 Crs
3901 4245 Crs
4707 4163 Crs
5001 4022 Crs
4719 4023 Crs
4377 3941 Crs
4548 3969 Crs
2814 4309 Crs
4578 4325 Crs
5007 4548 Crs
4891 3966 Crs
4790 4124 Crs
4845 4483 Crs
4516 3934 Crs
4911 4295 Crs
4491 4152 Crs
4443 4514 Crs
4280 4276 Crs
4142 4480 Crs
4539 4191 Crs
4539 4516 Crs
4370 4064 Crs
4338 4269 Crs
4978 4065 Crs
1774 4608 Crs
4620 4274 Crs
5115 4250 Crs
4482 4447 Crs
4684 4245 Crs
4462 4135 Crs
5180 4180 Crs
4656 4209 Crs
4868 4038 Crs
4820 3963 Crs
4718 3913 Crs
4845 4045 Crs
4071 4025 Crs
5047 4245 Crs
4939 4348 Crs
4844 4082 Crs
4094 4205 Crs
5120 4702 Crs
4587 4087 Crs
4166 4464 Crs
4689 4034 Crs
4757 4129 Crs
5030 3991 Crs
4950 4082 Crs
4968 4142 Crs
4386 4105 Crs
4870 4118 Crs
3100 4284 Crs
4914 3768 Crs
4943 4272 Crs
4750 3879 Crs
2398 4223 Crs
4431 4030 Crs
4923 3983 Crs
5138 4528 Crs
4629 4434 Crs
3755 4363 Crs
4659 4254 Crs
4897 4334 Crs
3686 4246 Crs
4521 3956 Crs
4643 4136 Crs
3995 4183 Crs
4624 4301 Crs
3550 4332 Crs
4806 4121 Crs
4890 3967 Crs
2786 4660 Crs
4893 4173 Crs
5152 3966 Crs
4831 4610 Crs
4937 4180 Crs
4975 4124 Crs
5010 4050 Crs
4762 4116 Crs
5102 4196 Crs
4945 4225 Crs
4462 4159 Crs
5092 3654 Crs
3750 4326 Crs
4539 4126 Crs
4092 3969 Crs
4615 4010 Crs
4879 3964 Crs
4859 4177 Crs
4960 3869 Crs
4985 4042 Crs
4679 4225 Crs
4767 3948 Crs
4716 3984 Crs
4494 4200 Crs
4601 4003 Crs
4528 3936 Crs
5205 4027 Crs
4159 4023 Crs
4773 3988 Crs
4742 4055 Crs
4638 4102 Crs
4936 4218 Crs
4408 4165 Crs
4890 4135 Crs
4907 4357 Crs
5001 4023 Crs
4666 4217 Crs
4785 4130 Crs
4583 4000 Crs
4427 4164 Crs
2272 2454 Crs
5173 3974 Crs
4718 4210 Crs
4665 4015 Crs
1802 753 Crs
4452 4287 Crs
4604 3925 Crs
5030 4037 Crs
4824 3909 Crs
4376 3833 Crs
4354 4195 Crs
4994 3958 Crs
5093 4112 Crs
4415 4207 Crs
4799 4194 Crs
5228 4174 Crs
4514 4139 Crs
4813 4446 Crs
5223 4225 Crs
4923 3903 Crs
4874 4126 Crs
5104 4386 Crs
4376 4168 Crs
4996 4296 Crs
4358 4085 Crs
5003 4086 Crs
4122 4416 Crs
4962 4204 Crs
4319 4015 Crs
4388 4263 Crs
3938 4830 Crs
3419 4289 Crs
4783 4084 Crs
4902 4009 Crs
4425 4309 Crs
4124 4301 Crs
4714 4180 Crs
3819 4105 Crs
4606 3909 Crs
4505 4236 Crs
4689 4012 Crs
4867 4495 Crs
5005 4097 Crs
1673 2345 Crs
6832 4662 Crs
1.000 UL
LTb
854 4872 N
854 448 L
5317 0 V
0 4424 V
-5317 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
