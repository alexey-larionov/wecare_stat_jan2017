%!PS-Adobe-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Mon Jan 30 17:43:58 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Alexey Larionov)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jan 30 17:43:58 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
854 448 M
63 0 V
5254 0 R
-63 0 V
770 448 M
(-0.1) Rshow
1.000 UL
LTb
854 890 M
63 0 V
5254 0 R
-63 0 V
770 890 M
( 0) Rshow
1.000 UL
LTb
854 1333 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.1) Rshow
1.000 UL
LTb
854 1775 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.2) Rshow
1.000 UL
LTb
854 2218 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.3) Rshow
1.000 UL
LTb
854 2660 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.4) Rshow
1.000 UL
LTb
854 3102 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.5) Rshow
1.000 UL
LTb
854 3545 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.6) Rshow
1.000 UL
LTb
854 3987 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.7) Rshow
1.000 UL
LTb
854 4430 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.8) Rshow
1.000 UL
LTb
854 4872 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.9) Rshow
1.000 UL
LTb
854 448 M
0 63 V
0 4361 R
0 -63 V
854 308 M
(-0.3) Cshow
1.000 UL
LTb
1614 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.25) Cshow
1.000 UL
LTb
2373 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.2) Cshow
1.000 UL
LTb
3133 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.15) Cshow
1.000 UL
LTb
3892 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.1) Cshow
1.000 UL
LTb
4652 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.05) Cshow
1.000 UL
LTb
5411 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0) Cshow
1.000 UL
LTb
6171 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.05) Cshow
1.000 UL
LTb
1.000 UL
LTb
854 4872 N
854 448 L
5317 0 V
0 4424 V
-5317 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(eigenvector 2) Cshow
grestore
LTb
LCb setrgbcolor
3512 98 M
(eigenvector 1) Cshow
LTb
3512 4802 M
() Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6549 4802 M
(UBC) Rshow
LT0
5670 844 Pls
5621 875 Pls
5457 893 Pls
5629 879 Pls
5620 826 Pls
5495 882 Pls
5521 883 Pls
5516 961 Pls
5683 907 Pls
5588 924 Pls
5603 849 Pls
5480 960 Pls
2960 571 Pls
5623 978 Pls
5601 848 Pls
5653 857 Pls
5407 892 Pls
5373 892 Pls
2250 557 Pls
5784 832 Pls
4971 1314 Pls
2428 468 Pls
3165 677 Pls
5668 924 Pls
5800 886 Pls
5667 886 Pls
5455 912 Pls
5565 853 Pls
5670 895 Pls
4409 961 Pls
5539 981 Pls
2794 693 Pls
5706 858 Pls
5670 844 Pls
5674 906 Pls
5639 877 Pls
5636 843 Pls
5761 891 Pls
4307 801 Pls
4997 932 Pls
5442 867 Pls
5737 875 Pls
5174 931 Pls
5601 901 Pls
5358 910 Pls
5820 878 Pls
5589 974 Pls
5711 913 Pls
5399 888 Pls
5615 863 Pls
5512 862 Pls
5607 949 Pls
5661 943 Pls
5667 867 Pls
5746 854 Pls
5612 926 Pls
4918 1043 Pls
5765 864 Pls
5740 884 Pls
5012 935 Pls
5547 837 Pls
5849 866 Pls
5759 879 Pls
5335 913 Pls
5639 928 Pls
5507 885 Pls
5536 865 Pls
5531 1019 Pls
5858 919 Pls
5653 916 Pls
5794 861 Pls
5478 887 Pls
2876 614 Pls
5572 883 Pls
5729 914 Pls
5457 925 Pls
5583 903 Pls
5548 898 Pls
5582 884 Pls
5626 904 Pls
5782 876 Pls
5714 864 Pls
2457 451 Pls
5638 893 Pls
5534 932 Pls
4248 1119 Pls
5718 864 Pls
5680 880 Pls
5667 876 Pls
5427 843 Pls
5501 912 Pls
5446 869 Pls
5588 901 Pls
2984 701 Pls
5630 891 Pls
5781 863 Pls
5615 865 Pls
5560 895 Pls
1574 461 Pls
5522 884 Pls
5408 836 Pls
5534 910 Pls
5627 869 Pls
5538 876 Pls
5515 870 Pls
5694 879 Pls
5384 947 Pls
2938 892 Pls
5493 878 Pls
5717 887 Pls
5521 856 Pls
5554 897 Pls
5557 937 Pls
5645 859 Pls
5572 916 Pls
5724 902 Pls
5793 858 Pls
5493 985 Pls
5565 878 Pls
3622 1235 Pls
5497 872 Pls
5495 977 Pls
5497 839 Pls
5791 858 Pls
5724 871 Pls
5404 895 Pls
5662 855 Pls
5445 881 Pls
5418 955 Pls
5115 888 Pls
5683 884 Pls
5411 921 Pls
5665 841 Pls
4966 929 Pls
5793 903 Pls
5692 885 Pls
5788 861 Pls
2876 733 Pls
5730 862 Pls
5635 895 Pls
5607 895 Pls
5688 932 Pls
5682 888 Pls
5542 867 Pls
5776 887 Pls
5495 913 Pls
5386 982 Pls
5641 883 Pls
5664 939 Pls
5418 797 Pls
5521 940 Pls
4322 1103 Pls
4576 970 Pls
4860 903 Pls
5553 891 Pls
5718 892 Pls
5866 897 Pls
3746 781 Pls
5659 926 Pls
5595 855 Pls
5601 908 Pls
5635 893 Pls
5720 870 Pls
5781 918 Pls
5699 898 Pls
5750 855 Pls
5771 866 Pls
5143 950 Pls
5846 937 Pls
5837 870 Pls
5790 872 Pls
5703 860 Pls
5647 880 Pls
5720 877 Pls
5620 853 Pls
5677 908 Pls
5630 873 Pls
5714 921 Pls
5542 870 Pls
2592 586 Pls
5621 877 Pls
5703 806 Pls
5604 912 Pls
5723 891 Pls
5613 893 Pls
5843 909 Pls
5723 900 Pls
5694 858 Pls
5577 881 Pls
5662 903 Pls
5638 901 Pls
5723 854 Pls
5696 844 Pls
5615 877 Pls
5676 875 Pls
5267 840 Pls
5462 842 Pls
5492 978 Pls
5744 924 Pls
5697 859 Pls
5472 898 Pls
5419 922 Pls
5782 903 Pls
5712 923 Pls
5733 891 Pls
5562 888 Pls
5743 876 Pls
5553 874 Pls
5796 859 Pls
5436 908 Pls
3505 783 Pls
5553 891 Pls
5738 877 Pls
5699 895 Pls
5545 871 Pls
5574 905 Pls
5723 918 Pls
5770 901 Pls
5705 897 Pls
5659 880 Pls
5673 909 Pls
5603 861 Pls
5764 890 Pls
5548 875 Pls
5696 866 Pls
5729 888 Pls
2592 780 Pls
5686 919 Pls
5715 890 Pls
5553 932 Pls
5582 929 Pls
5699 866 Pls
5455 893 Pls
2932 687 Pls
5466 872 Pls
5866 909 Pls
5638 977 Pls
5726 856 Pls
5811 813 Pls
6832 4802 Pls
1.000 UP
1.000 UL
LT1
LTb
6549 4662 M
(CBC) Rshow
LT1
2352 633 Crs
3871 1166 Crs
5433 900 Crs
5472 852 Crs
5659 864 Crs
5618 833 Crs
5574 975 Crs
2239 827 Crs
5744 953 Crs
5524 860 Crs
5419 855 Crs
5574 845 Crs
5630 914 Crs
5515 881 Crs
5594 890 Crs
2001 659 Crs
5636 840 Crs
4432 830 Crs
2612 623 Crs
5674 856 Crs
5702 901 Crs
5746 890 Crs
5686 844 Crs
5770 869 Crs
5445 956 Crs
5569 863 Crs
5610 893 Crs
5653 878 Crs
5600 830 Crs
5686 919 Crs
5662 934 Crs
5664 896 Crs
3810 929 Crs
5582 888 Crs
5618 839 Crs
5738 930 Crs
5501 899 Crs
5733 867 Crs
5683 851 Crs
5776 852 Crs
5568 765 Crs
5463 878 Crs
5685 937 Crs
5519 901 Crs
5361 924 Crs
3152 700 Crs
5569 880 Crs
5715 867 Crs
5673 899 Crs
5662 859 Crs
5583 869 Crs
5376 847 Crs
5670 867 Crs
5483 895 Crs
5217 858 Crs
5723 851 Crs
5718 923 Crs
5583 900 Crs
5457 851 Crs
5445 906 Crs
5477 895 Crs
5632 864 Crs
2704 4621 Crs
5806 858 Crs
5427 913 Crs
5711 879 Crs
5498 891 Crs
5758 890 Crs
5621 859 Crs
5645 792 Crs
5361 922 Crs
5752 880 Crs
5630 867 Crs
5492 874 Crs
5650 882 Crs
5683 908 Crs
5512 969 Crs
2587 511 Crs
5607 905 Crs
5173 891 Crs
5610 895 Crs
5849 870 Crs
5697 879 Crs
5566 844 Crs
5600 916 Crs
4553 807 Crs
5536 896 Crs
5674 947 Crs
5738 853 Crs
5624 867 Crs
5665 919 Crs
5568 868 Crs
5661 890 Crs
5641 928 Crs
5487 949 Crs
5408 915 Crs
5282 979 Crs
5562 895 Crs
5468 1015 Crs
5551 902 Crs
5428 881 Crs
5779 841 Crs
2531 616 Crs
5595 881 Crs
5785 928 Crs
5509 901 Crs
5606 823 Crs
5594 861 Crs
5781 926 Crs
5598 892 Crs
5702 866 Crs
5617 928 Crs
5677 893 Crs
5711 898 Crs
5334 921 Crs
5699 849 Crs
5682 901 Crs
5708 851 Crs
5369 903 Crs
5717 940 Crs
5506 878 Crs
5307 843 Crs
5568 854 Crs
5668 835 Crs
5814 933 Crs
5724 900 Crs
5726 904 Crs
5591 924 Crs
5743 872 Crs
4628 901 Crs
5768 852 Crs
5700 852 Crs
5679 863 Crs
3581 2606 Crs
5580 861 Crs
5752 859 Crs
5743 920 Crs
5572 966 Crs
4667 842 Crs
5528 897 Crs
5758 933 Crs
5091 909 Crs
5575 900 Crs
5638 874 Crs
5425 844 Crs
5560 854 Crs
4678 835 Crs
5650 886 Crs
5755 830 Crs
4000 730 Crs
5601 858 Crs
5785 891 Crs
5621 947 Crs
5737 895 Crs
5721 870 Crs
5749 893 Crs
5612 868 Crs
5864 869 Crs
5677 889 Crs
5572 856 Crs
5904 797 Crs
5079 895 Crs
5527 834 Crs
5408 868 Crs
5603 847 Crs
5697 875 Crs
5696 886 Crs
5790 844 Crs
5733 859 Crs
5562 859 Crs
5723 864 Crs
5732 866 Crs
5597 866 Crs
5644 871 Crs
5610 855 Crs
5870 889 Crs
5326 912 Crs
5627 868 Crs
5654 865 Crs
5653 863 Crs
5692 909 Crs
5462 904 Crs
5674 876 Crs
5694 934 Crs
5808 806 Crs
5626 888 Crs
5644 855 Crs
5630 892 Crs
5539 850 Crs
5761 837 Crs
5583 875 Crs
5615 896 Crs
5548 891 Crs
5667 905 Crs
5822 839 Crs
5667 851 Crs
5519 868 Crs
5490 899 Crs
5727 875 Crs
5819 886 Crs
5525 907 Crs
5582 887 Crs
5776 841 Crs
5538 911 Crs
5630 910 Crs
5834 897 Crs
5724 863 Crs
5706 866 Crs
5718 919 Crs
5452 873 Crs
5674 894 Crs
5445 924 Crs
5714 877 Crs
5355 840 Crs
5864 911 Crs
5525 890 Crs
5515 882 Crs
5016 1029 Crs
4713 844 Crs
5741 855 Crs
5688 834 Crs
5550 897 Crs
5436 844 Crs
5636 892 Crs
5361 923 Crs
5600 898 Crs
5489 880 Crs
5724 900 Crs
5644 898 Crs
5775 885 Crs
6832 4662 Crs
1.000 UL
LTb
854 4872 N
854 448 L
5317 0 V
0 4424 V
-5317 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
