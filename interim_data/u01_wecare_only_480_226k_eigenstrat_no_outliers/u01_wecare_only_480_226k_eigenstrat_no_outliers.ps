%!PS-Adobe-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Mon Jan 30 15:22:35 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Alexey Larionov)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jan 30 15:22:35 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
854 448 M
63 0 V
5254 0 R
-63 0 V
770 448 M
(-1) Rshow
1.000 UL
LTb
854 1185 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
(-0.8) Rshow
1.000 UL
LTb
854 1923 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
(-0.6) Rshow
1.000 UL
LTb
854 2660 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
(-0.4) Rshow
1.000 UL
LTb
854 3397 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
(-0.2) Rshow
1.000 UL
LTb
854 4135 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0) Rshow
1.000 UL
LTb
854 4872 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.2) Rshow
1.000 UL
LTb
854 448 M
0 63 V
0 4361 R
0 -63 V
854 308 M
(-0.1) Cshow
1.000 UL
LTb
1614 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0) Cshow
1.000 UL
LTb
2373 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.1) Cshow
1.000 UL
LTb
3133 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.2) Cshow
1.000 UL
LTb
3892 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.3) Cshow
1.000 UL
LTb
4652 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.4) Cshow
1.000 UL
LTb
5411 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.5) Cshow
1.000 UL
LTb
6171 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.6) Cshow
1.000 UL
LTb
1.000 UL
LTb
854 4872 N
854 448 L
5317 0 V
0 4424 V
-5317 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(eigenvector 2) Cshow
grestore
LTb
LCb setrgbcolor
3512 98 M
(eigenvector 1) Cshow
LTb
3512 4802 M
() Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6549 4802 M
(UBC) Rshow
LT0
1547 4148 Pls
1555 4154 Pls
1538 4130 Pls
1552 4152 Pls
1528 4169 Pls
1538 4138 Pls
1551 4146 Pls
1558 4149 Pls
1577 4157 Pls
1555 4142 Pls
3651 4140 Pls
1538 4144 Pls
1634 4151 Pls
1750 3978 Pls
4179 4278 Pls
1551 4146 Pls
1518 4164 Pls
1535 4155 Pls
1570 4142 Pls
1566 4121 Pls
1769 3924 Pls
3724 4302 Pls
1505 4174 Pls
2228 4193 Pls
1794 3950 Pls
1751 3973 Pls
1531 4165 Pls
1547 4163 Pls
1547 4151 Pls
1690 4149 Pls
1539 4125 Pls
1519 4150 Pls
1716 4040 Pls
1554 4149 Pls
1772 3953 Pls
1516 4150 Pls
1503 4146 Pls
1538 4157 Pls
1506 4150 Pls
1570 4163 Pls
1544 4147 Pls
1680 4045 Pls
1629 4114 Pls
1572 4144 Pls
1548 4159 Pls
1632 4122 Pls
1538 4138 Pls
1589 4139 Pls
1522 4170 Pls
1534 4145 Pls
1551 4154 Pls
1538 4146 Pls
1571 4173 Pls
1537 4148 Pls
1534 4156 Pls
1540 4151 Pls
1544 4169 Pls
1538 4158 Pls
1547 4153 Pls
1590 4064 Pls
1550 4172 Pls
1525 4168 Pls
1610 4100 Pls
1529 4156 Pls
1528 4162 Pls
1527 4165 Pls
1557 4150 Pls
1598 4132 Pls
2874 4150 Pls
1598 4139 Pls
1562 4147 Pls
1542 4152 Pls
1513 4157 Pls
1606 4141 Pls
1563 4151 Pls
1556 4147 Pls
1761 3967 Pls
1573 4142 Pls
1547 4170 Pls
1519 4124 Pls
1574 4159 Pls
1563 4146 Pls
1536 4149 Pls
1531 4167 Pls
1517 4170 Pls
1536 4170 Pls
1702 3942 Pls
1536 4158 Pls
1563 4142 Pls
1712 4051 Pls
1541 4151 Pls
1520 4143 Pls
1510 4153 Pls
1557 4136 Pls
1532 4149 Pls
1533 4132 Pls
1564 4144 Pls
1737 3926 Pls
1543 4158 Pls
1545 4181 Pls
1541 4146 Pls
1576 4151 Pls
1860 3908 Pls
1814 3872 Pls
1514 4158 Pls
1543 4128 Pls
1587 4144 Pls
1566 4148 Pls
1584 4149 Pls
1593 4155 Pls
1524 4163 Pls
1565 4131 Pls
1756 3967 Pls
1538 4134 Pls
1540 4168 Pls
1541 4142 Pls
1557 4139 Pls
1519 4142 Pls
1547 4162 Pls
1557 4132 Pls
1588 4176 Pls
1522 4164 Pls
1548 4115 Pls
1569 4142 Pls
1652 3958 Pls
1576 4149 Pls
1808 4130 Pls
1520 4152 Pls
1552 4167 Pls
1557 4159 Pls
1611 4147 Pls
1561 4149 Pls
1516 4146 Pls
1550 4137 Pls
1612 4103 Pls
1565 4153 Pls
1563 4149 Pls
1506 4158 Pls
1601 4100 Pls
1537 4163 Pls
1543 4149 Pls
1538 4159 Pls
1724 3962 Pls
1576 4177 Pls
1541 4165 Pls
1541 4130 Pls
1526 4148 Pls
1542 4167 Pls
1549 4145 Pls
1538 4172 Pls
1541 4146 Pls
1561 4145 Pls
1539 4150 Pls
1512 4172 Pls
2129 4212 Pls
1562 4132 Pls
1701 4037 Pls
1633 4065 Pls
1840 4141 Pls
1573 4150 Pls
1519 4154 Pls
1513 4179 Pls
1715 4023 Pls
1557 4159 Pls
1579 4148 Pls
1562 4166 Pls
1539 4150 Pls
1541 4141 Pls
1526 4183 Pls
1541 4163 Pls
1527 4162 Pls
1544 4156 Pls
1599 4107 Pls
1501 4165 Pls
1532 4178 Pls
1533 4161 Pls
1534 4150 Pls
1528 4157 Pls
1531 4138 Pls
1550 4143 Pls
1513 4160 Pls
1522 4160 Pls
1529 4156 Pls
1552 4151 Pls
1734 3938 Pls
1536 4147 Pls
1570 4156 Pls
1545 4149 Pls
1532 4157 Pls
1538 4157 Pls
1538 4169 Pls
1530 4165 Pls
1544 4159 Pls
1583 4146 Pls
1539 4159 Pls
1557 4160 Pls
1555 4182 Pls
1552 4165 Pls
1551 4138 Pls
1573 4157 Pls
1532 4118 Pls
1584 4131 Pls
1562 4145 Pls
1564 4159 Pls
1560 4155 Pls
2399 4089 Pls
1576 4141 Pls
1612 4135 Pls
1542 4177 Pls
1510 4153 Pls
1544 4163 Pls
1577 4160 Pls
1549 4161 Pls
1510 4139 Pls
1550 4161 Pls
1595 4128 Pls
1732 4033 Pls
1545 4130 Pls
1547 4159 Pls
1539 4146 Pls
1543 4156 Pls
1579 4159 Pls
1522 4166 Pls
1514 4169 Pls
1532 4150 Pls
1554 4162 Pls
1540 4152 Pls
1550 4155 Pls
1497 4160 Pls
1556 4155 Pls
1532 4180 Pls
1548 4169 Pls
1791 3948 Pls
1515 4141 Pls
1529 4150 Pls
1535 4149 Pls
1563 4145 Pls
1567 4165 Pls
1578 4133 Pls
1749 3985 Pls
1557 4142 Pls
1548 4168 Pls
1540 4161 Pls
1558 4171 Pls
1534 4167 Pls
6832 4802 Pls
1.000 UP
1.000 UL
LT1
LTb
6549 4662 M
(CBC) Rshow
LT1
1733 3929 Crs
1724 4019 Crs
1576 4143 Crs
1552 4140 Crs
1598 4163 Crs
1565 4159 Crs
1530 4162 Crs
1829 3922 Crs
1532 4167 Crs
1585 4157 Crs
1583 4136 Crs
1586 4141 Crs
1518 4146 Crs
1560 4139 Crs
1570 4131 Crs
2707 4177 Crs
1741 3928 Crs
1524 4146 Crs
1635 4068 Crs
1786 3968 Crs
2760 711 Crs
1592 4167 Crs
1559 4167 Crs
1534 4171 Crs
1523 4152 Crs
1551 4166 Crs
1549 4154 Crs
1546 4158 Crs
1577 4157 Crs
1551 4170 Crs
1547 4143 Crs
1532 4161 Crs
1541 4166 Crs
1542 4152 Crs
1709 4045 Crs
1573 4161 Crs
1573 4155 Crs
1496 4172 Crs
1571 4160 Crs
1558 4159 Crs
1549 4166 Crs
1502 4174 Crs
1614 4129 Crs
1539 4146 Crs
1546 4167 Crs
1556 4153 Crs
1603 4131 Crs
1791 3999 Crs
1541 4162 Crs
1506 4163 Crs
1544 4152 Crs
1519 4153 Crs
1562 4150 Crs
1580 4137 Crs
1583 4168 Crs
1551 4148 Crs
1597 4144 Crs
1607 4181 Crs
1519 4161 Crs
1554 4165 Crs
1557 4162 Crs
1548 4151 Crs
1594 4130 Crs
1548 4148 Crs
1785 3932 Crs
1524 4170 Crs
1549 4146 Crs
1496 4167 Crs
1998 4187 Crs
1518 4155 Crs
1550 4155 Crs
1516 4158 Crs
1563 4134 Crs
1535 4167 Crs
1506 4157 Crs
1566 4144 Crs
1557 4145 Crs
1562 4166 Crs
1569 4150 Crs
1807 3967 Crs
1530 4169 Crs
1626 4114 Crs
1536 4157 Crs
1537 4164 Crs
1549 4164 Crs
1579 4135 Crs
1562 4148 Crs
1694 4044 Crs
1510 4147 Crs
1525 4155 Crs
1573 4166 Crs
1527 4158 Crs
1524 4159 Crs
1579 4161 Crs
1524 4147 Crs
1533 4140 Crs
1536 4158 Crs
1570 4124 Crs
1589 4116 Crs
1559 4149 Crs
1554 4125 Crs
1563 4148 Crs
1554 4138 Crs
1513 4163 Crs
1769 3979 Crs
1525 4143 Crs
1530 4163 Crs
1562 4138 Crs
1525 4156 Crs
1549 4141 Crs
1525 4182 Crs
1525 4158 Crs
1544 4168 Crs
1563 4158 Crs
1562 4173 Crs
1548 4159 Crs
1687 4160 Crs
1510 4167 Crs
1532 4157 Crs
1511 4149 Crs
1555 4117 Crs
1487 4164 Crs
1557 4138 Crs
1543 4124 Crs
1561 4158 Crs
1540 4155 Crs
1549 4179 Crs
1541 4152 Crs
1537 4168 Crs
1578 4160 Crs
1515 4173 Crs
1648 4072 Crs
1560 4178 Crs
1500 4176 Crs
1541 4157 Crs
1862 4028 Crs
1577 4159 Crs
1542 4176 Crs
1516 4160 Crs
1516 4142 Crs
1594 4069 Crs
1532 4140 Crs
1538 4164 Crs
1609 4105 Crs
1581 4145 Crs
1549 4145 Crs
1557 4140 Crs
1523 4141 Crs
1649 4097 Crs
1528 4158 Crs
1535 4161 Crs
1640 4037 Crs
1545 4145 Crs
1553 4169 Crs
1543 4163 Crs
1521 4165 Crs
1551 4157 Crs
1524 4159 Crs
1520 4144 Crs
1493 4153 Crs
1521 4168 Crs
1554 4135 Crs
1650 4201 Crs
1607 4104 Crs
1588 4120 Crs
1601 4151 Crs
1560 4157 Crs
1563 4162 Crs
1532 4167 Crs
1551 4170 Crs
1544 4177 Crs
1536 4148 Crs
1538 4157 Crs
1568 4140 Crs
1568 4151 Crs
1563 4154 Crs
1550 4168 Crs
1510 4176 Crs
1617 4142 Crs
1545 4161 Crs
1549 4162 Crs
1543 4159 Crs
1510 4163 Crs
1547 4135 Crs
1535 4165 Crs
1532 4166 Crs
1520 4155 Crs
1525 4150 Crs
1514 4152 Crs
1576 4161 Crs
1569 4140 Crs
3142 4218 Crs
1528 4175 Crs
1538 4150 Crs
1552 4152 Crs
5331 4635 Crs
1555 4134 Crs
1560 4167 Crs
1527 4186 Crs
1543 4149 Crs
1592 4147 Crs
1585 4146 Crs
1549 4188 Crs
1535 4159 Crs
1535 4142 Crs
1532 4148 Crs
1513 4156 Crs
1608 4149 Crs
1522 4157 Crs
1528 4165 Crs
1547 4161 Crs
1522 4155 Crs
1542 4177 Crs
1551 4146 Crs
1516 4165 Crs
1566 4151 Crs
1547 4171 Crs
1533 4131 Crs
1559 4182 Crs
1557 4156 Crs
1546 4138 Crs
1576 4104 Crs
1617 4071 Crs
1544 4151 Crs
1554 4162 Crs
1542 4148 Crs
1558 4145 Crs
1543 4168 Crs
1585 4142 Crs
1571 4153 Crs
1533 4145 Crs
1568 4155 Crs
1518 4160 Crs
1511 4158 Crs
5850 4709 Crs
6832 4662 Crs
1.000 UL
LTb
854 4872 N
854 448 L
5317 0 V
0 4424 V
-5317 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
