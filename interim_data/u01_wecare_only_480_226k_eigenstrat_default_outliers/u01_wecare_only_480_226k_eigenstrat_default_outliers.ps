%!PS-Adobe-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Mon Jan 30 15:19:41 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Alexey Larionov)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jan 30 15:19:41 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
938 448 M
63 0 V
5170 0 R
-63 0 V
854 448 M
(-0.35) Rshow
1.000 UL
LTb
938 850 M
63 0 V
5170 0 R
-63 0 V
854 850 M
(-0.3) Rshow
1.000 UL
LTb
938 1252 M
63 0 V
5170 0 R
-63 0 V
-5254 0 R
(-0.25) Rshow
1.000 UL
LTb
938 1655 M
63 0 V
5170 0 R
-63 0 V
-5254 0 R
(-0.2) Rshow
1.000 UL
LTb
938 2057 M
63 0 V
5170 0 R
-63 0 V
-5254 0 R
(-0.15) Rshow
1.000 UL
LTb
938 2459 M
63 0 V
5170 0 R
-63 0 V
-5254 0 R
(-0.1) Rshow
1.000 UL
LTb
938 2861 M
63 0 V
5170 0 R
-63 0 V
-5254 0 R
(-0.05) Rshow
1.000 UL
LTb
938 3263 M
63 0 V
5170 0 R
-63 0 V
-5254 0 R
( 0) Rshow
1.000 UL
LTb
938 3665 M
63 0 V
5170 0 R
-63 0 V
-5254 0 R
( 0.05) Rshow
1.000 UL
LTb
938 4068 M
63 0 V
5170 0 R
-63 0 V
-5254 0 R
( 0.1) Rshow
1.000 UL
LTb
938 4470 M
63 0 V
5170 0 R
-63 0 V
-5254 0 R
( 0.15) Rshow
1.000 UL
LTb
938 4872 M
63 0 V
5170 0 R
-63 0 V
-5254 0 R
( 0.2) Rshow
1.000 UL
LTb
938 448 M
0 63 V
0 4361 R
0 -63 V
938 308 M
(-0.7) Cshow
1.000 UL
LTb
1592 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.6) Cshow
1.000 UL
LTb
2246 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.5) Cshow
1.000 UL
LTb
2900 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.4) Cshow
1.000 UL
LTb
3554 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.3) Cshow
1.000 UL
LTb
4209 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.2) Cshow
1.000 UL
LTb
4863 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.1) Cshow
1.000 UL
LTb
5517 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0) Cshow
1.000 UL
LTb
6171 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.1) Cshow
1.000 UL
LTb
1.000 UL
LTb
938 4872 N
938 448 L
5233 0 V
0 4424 V
-5233 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(eigenvector 2) Cshow
grestore
LTb
LCb setrgbcolor
3554 98 M
(eigenvector 1) Cshow
LTb
3554 4802 M
() Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6549 4802 M
(UBC) Rshow
LT0
5677 3105 Pls
5596 3367 Pls
5364 3195 Pls
5573 3413 Pls
5552 3455 Pls
5393 3543 Pls
5317 3661 Pls
5565 2530 Pls
5345 3377 Pls
5444 2987 Pls
5515 2996 Pls
5893 1865 Pls
5719 2650 Pls
5472 2946 Pls
5576 3599 Pls
5315 3625 Pls
5330 3393 Pls
5620 3501 Pls
5610 2817 Pls
5729 3535 Pls
5414 3373 Pls
5305 4287 Pls
5538 3573 Pls
5472 3382 Pls
3422 3658 Pls
5609 2683 Pls
5519 3493 Pls
5602 3084 Pls
5584 3435 Pls
5665 3415 Pls
5639 3196 Pls
5722 3573 Pls
5017 3491 Pls
5568 3624 Pls
4854 3887 Pls
5771 2710 Pls
5277 3784 Pls
5667 3553 Pls
5536 2527 Pls
5406 3487 Pls
5209 3184 Pls
5400 3365 Pls
5399 3192 Pls
5667 2707 Pls
5642 2919 Pls
5576 3567 Pls
5619 3208 Pls
5755 2617 Pls
5652 3604 Pls
5605 3491 Pls
5531 2978 Pls
5813 3268 Pls
5759 2989 Pls
5385 3299 Pls
5454 3397 Pls
5383 3346 Pls
5445 3460 Pls
5784 2160 Pls
5822 2667 Pls
5514 2975 Pls
5609 3641 Pls
5561 3122 Pls
5595 3400 Pls
5561 3318 Pls
5572 2545 Pls
5661 3334 Pls
5149 3511 Pls
5565 3430 Pls
5530 3354 Pls
5658 3062 Pls
5616 3461 Pls
5555 3640 Pls
5496 2894 Pls
5632 3500 Pls
5467 3354 Pls
5560 2679 Pls
5484 3220 Pls
5378 3259 Pls
5480 3196 Pls
5508 3279 Pls
5692 2981 Pls
5452 3422 Pls
5580 3617 Pls
5544 3203 Pls
5588 2798 Pls
5635 3225 Pls
5465 3257 Pls
5440 3476 Pls
5491 2929 Pls
5489 3616 Pls
5547 3132 Pls
5274 3144 Pls
5559 3481 Pls
5463 3384 Pls
5571 3668 Pls
5603 2804 Pls
5509 3166 Pls
5462 3601 Pls
5480 2579 Pls
5708 3499 Pls
5745 3456 Pls
5540 3476 Pls
5455 3390 Pls
5546 2978 Pls
5746 3033 Pls
5609 3342 Pls
5310 3497 Pls
5377 3458 Pls
5365 3243 Pls
5262 3478 Pls
4492 2791 Pls
5487 3399 Pls
5349 3032 Pls
5722 3554 Pls
4338 2821 Pls
5688 3283 Pls
5562 3626 Pls
5514 3476 Pls
5590 3656 Pls
5472 3486 Pls
5662 3237 Pls
5583 2608 Pls
5539 3468 Pls
5700 3443 Pls
5678 3532 Pls
5353 3964 Pls
5782 997 Pls
5467 2888 Pls
5593 3131 Pls
5555 3649 Pls
5396 3331 Pls
5474 3463 Pls
5665 3127 Pls
3706 2999 Pls
5532 3371 Pls
5494 2890 Pls
5450 3196 Pls
5497 3076 Pls
5678 3479 Pls
5728 3088 Pls
5767 3259 Pls
5668 3443 Pls
5665 3609 Pls
5465 2284 Pls
5848 3266 Pls
5603 3147 Pls
5605 3189 Pls
5655 3290 Pls
5618 3025 Pls
5650 3616 Pls
5514 3201 Pls
5760 2958 Pls
5693 3006 Pls
5773 2791 Pls
5542 3225 Pls
5618 3432 Pls
5646 3609 Pls
5682 3210 Pls
5621 3497 Pls
5622 3324 Pls
5811 3028 Pls
5647 3521 Pls
5650 3521 Pls
5568 3772 Pls
5605 2809 Pls
5428 2954 Pls
5587 3573 Pls
5690 3558 Pls
5360 3179 Pls
5588 3197 Pls
5438 3414 Pls
5215 3205 Pls
5536 2840 Pls
5708 2680 Pls
5670 3162 Pls
5510 3382 Pls
4870 3743 Pls
5594 3507 Pls
5512 3200 Pls
5700 3468 Pls
5605 3283 Pls
5604 3456 Pls
5622 3445 Pls
5463 3405 Pls
5395 3495 Pls
5582 3137 Pls
5614 3300 Pls
5631 3406 Pls
5443 3719 Pls
5623 3329 Pls
5677 3337 Pls
5695 2958 Pls
5783 3620 Pls
5538 2896 Pls
5458 3357 Pls
5570 3320 Pls
5586 3583 Pls
5259 3225 Pls
5663 3093 Pls
5475 3295 Pls
5682 2666 Pls
5654 3176 Pls
5616 3428 Pls
5507 3426 Pls
5506 3505 Pls
5469 3510 Pls
5361 3149 Pls
5618 3304 Pls
5787 2703 Pls
5597 3461 Pls
5758 3551 Pls
6832 4802 Pls
1.000 UP
1.000 UL
LT1
LTb
6549 4662 M
(CBC) Rshow
LT1
5410 3318 Crs
5245 3454 Crs
5554 3488 Crs
5643 3723 Crs
5673 2191 Crs
5686 2810 Crs
5487 3254 Crs
5194 3658 Crs
5385 3016 Crs
5414 2933 Crs
5508 2874 Crs
5463 3541 Crs
5544 3525 Crs
4258 3174 Crs
5697 3525 Crs
5642 3251 Crs
5692 3286 Crs
5661 3427 Crs
5589 3433 Crs
5589 3585 Crs
5404 3785 Crs
5563 3432 Crs
5661 3148 Crs
5531 3373 Crs
5629 2958 Crs
5940 2097 Crs
5431 3359 Crs
1524 765 Crs
5597 3344 Crs
5572 3501 Crs
5874 2180 Crs
5535 3439 Crs
5527 3334 Crs
5461 3800 Crs
5599 3645 Crs
5323 3287 Crs
5675 2841 Crs
5468 3632 Crs
5171 3665 Crs
5459 3671 Crs
5647 2974 Crs
5527 3474 Crs
5508 3493 Crs
5310 3521 Crs
5591 3454 Crs
5514 3435 Crs
5376 3317 Crs
5453 3819 Crs
5652 3308 Crs
5619 2967 Crs
5395 3410 Crs
5413 3549 Crs
5454 3414 Crs
5584 3264 Crs
5557 3580 Crs
5434 2946 Crs
5726 3250 Crs
5681 4244 Crs
5583 3224 Crs
5534 3398 Crs
5486 3395 Crs
5351 3543 Crs
5707 3599 Crs
5630 3065 Crs
5515 3394 Crs
5516 3378 Crs
5662 3448 Crs
5589 2645 Crs
5618 2701 Crs
5343 3248 Crs
5583 3306 Crs
5563 3406 Crs
5731 3739 Crs
5388 3521 Crs
5472 3221 Crs
5436 3328 Crs
5724 2656 Crs
5710 3217 Crs
5518 3452 Crs
5771 2753 Crs
5574 3642 Crs
5565 2911 Crs
5279 3178 Crs
5669 2944 Crs
5455 2115 Crs
5418 2272 Crs
5620 2898 Crs
5640 1700 Crs
5564 3451 Crs
5428 3192 Crs
5578 3475 Crs
5442 3538 Crs
5816 3094 Crs
5542 2175 Crs
5722 3221 Crs
5365 3773 Crs
5656 3086 Crs
5443 3163 Crs
5593 3348 Crs
5497 3331 Crs
5608 3658 Crs
5463 3484 Crs
4997 3310 Crs
5760 3112 Crs
5667 3121 Crs
5551 3682 Crs
5200 3711 Crs
5818 1920 Crs
5470 3672 Crs
5392 2942 Crs
5484 3766 Crs
5639 3577 Crs
5646 3425 Crs
5487 3436 Crs
5705 3107 Crs
5442 3339 Crs
5459 3377 Crs
5397 3741 Crs
5460 3443 Crs
5465 3722 Crs
5463 3434 Crs
5724 3504 Crs
5872 2560 Crs
5665 2608 Crs
3449 4714 Crs
5478 3341 Crs
5880 2823 Crs
4903 3538 Crs
5527 3578 Crs
5609 3175 Crs
5218 3436 Crs
5529 3102 Crs
5548 3265 Crs
5561 3475 Crs
5737 2934 Crs
5616 3290 Crs
5695 2581 Crs
5574 3252 Crs
5716 3248 Crs
5673 3475 Crs
5728 3245 Crs
5731 3090 Crs
5492 3428 Crs
5595 3901 Crs
4831 2921 Crs
5432 3282 Crs
5349 3472 Crs
5515 3533 Crs
5494 3221 Crs
5608 3168 Crs
5749 3454 Crs
5667 3345 Crs
5590 3188 Crs
5591 3501 Crs
5504 3798 Crs
5596 3259 Crs
5370 3554 Crs
5586 3739 Crs
5703 3719 Crs
5449 3277 Crs
5538 3443 Crs
5662 3270 Crs
5624 3171 Crs
5563 3250 Crs
5441 3341 Crs
5689 3447 Crs
5714 3016 Crs
5790 3571 Crs
5642 3098 Crs
5537 3389 Crs
5530 3381 Crs
5373 3469 Crs
5697 3613 Crs
5760 3080 Crs
5589 3458 Crs
5442 3086 Crs
5421 3283 Crs
5690 3188 Crs
5555 3645 Crs
5461 3538 Crs
5583 3006 Crs
5610 3468 Crs
5684 3052 Crs
5527 3382 Crs
5589 3106 Crs
5818 3279 Crs
5617 3188 Crs
5740 2765 Crs
5795 2878 Crs
5566 3452 Crs
5681 3377 Crs
5745 3024 Crs
5272 3414 Crs
5665 3143 Crs
5274 3553 Crs
5540 3228 Crs
5171 3202 Crs
5984 2629 Crs
5378 3443 Crs
5548 3550 Crs
5406 3408 Crs
5572 3464 Crs
5474 2907 Crs
5495 3678 Crs
5674 3397 Crs
5124 3556 Crs
5489 3501 Crs
5421 3369 Crs
5683 3145 Crs
5609 2555 Crs
5484 3587 Crs
6832 4662 Crs
1.000 UL
LTb
938 4872 N
938 448 L
5233 0 V
0 4424 V
-5233 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
