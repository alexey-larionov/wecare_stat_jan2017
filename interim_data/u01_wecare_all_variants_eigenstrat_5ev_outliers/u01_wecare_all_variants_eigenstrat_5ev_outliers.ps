%!PS-Adobe-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Mon Feb 13 10:43:26 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Alexey Larionov)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Feb 13 10:43:26 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
854 448 M
63 0 V
5254 0 R
-63 0 V
770 448 M
(-0.6) Rshow
1.000 UL
LTb
854 850 M
63 0 V
5254 0 R
-63 0 V
770 850 M
(-0.5) Rshow
1.000 UL
LTb
854 1252 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
(-0.4) Rshow
1.000 UL
LTb
854 1655 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
(-0.3) Rshow
1.000 UL
LTb
854 2057 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
(-0.2) Rshow
1.000 UL
LTb
854 2459 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
(-0.1) Rshow
1.000 UL
LTb
854 2861 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0) Rshow
1.000 UL
LTb
854 3263 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.1) Rshow
1.000 UL
LTb
854 3665 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.2) Rshow
1.000 UL
LTb
854 4068 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.3) Rshow
1.000 UL
LTb
854 4470 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.4) Rshow
1.000 UL
LTb
854 4872 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.5) Rshow
1.000 UL
LTb
854 448 M
0 63 V
0 4361 R
0 -63 V
854 308 M
(-0.05) Cshow
1.000 UL
LTb
1614 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0) Cshow
1.000 UL
LTb
2373 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.05) Cshow
1.000 UL
LTb
3133 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.1) Cshow
1.000 UL
LTb
3892 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.15) Cshow
1.000 UL
LTb
4652 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.2) Cshow
1.000 UL
LTb
5411 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.25) Cshow
1.000 UL
LTb
6171 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.3) Cshow
1.000 UL
LTb
1.000 UL
LTb
854 4872 N
854 448 L
5317 0 V
0 4424 V
-5317 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(eigenvector 2) Cshow
grestore
LTb
LCb setrgbcolor
3512 98 M
(eigenvector 1) Cshow
LTb
3512 4802 M
() Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6549 4802 M
(UBC) Rshow
LT0
1402 2865 Pls
1459 2867 Pls
1586 2823 Pls
1446 2888 Pls
1568 2876 Pls
1565 2856 Pls
1597 2893 Pls
1503 2892 Pls
1355 2923 Pls
1507 2888 Pls
1483 2868 Pls
1606 2779 Pls
5218 1427 Pls
1329 2881 Pls
1513 2829 Pls
1361 2884 Pls
1677 2814 Pls
1682 2829 Pls
1217 2835 Pls
4626 2887 Pls
1421 2797 Pls
1194 2813 Pls
1381 2866 Pls
1582 2956 Pls
1507 2855 Pls
1425 2927 Pls
2906 2984 Pls
1481 2815 Pls
5290 3787 Pls
1371 2841 Pls
1422 2825 Pls
1398 2839 Pls
1366 2851 Pls
1402 2871 Pls
1290 2929 Pls
2994 2934 Pls
2150 3017 Pls
1670 2992 Pls
1357 2870 Pls
2022 2813 Pls
1427 2855 Pls
1655 2957 Pls
1217 2864 Pls
1418 2851 Pls
1366 2848 Pls
1708 2819 Pls
1507 2891 Pls
1586 2847 Pls
1395 2916 Pls
1372 2847 Pls
1428 2831 Pls
1314 2855 Pls
1425 2834 Pls
2256 2685 Pls
1295 2897 Pls
1371 2866 Pls
2164 3190 Pls
1536 2812 Pls
1214 2882 Pls
1304 2841 Pls
1764 2849 Pls
1431 2851 Pls
1542 2790 Pls
1521 2823 Pls
1509 2977 Pls
1199 2853 Pls
1378 2833 Pls
1240 2833 Pls
1582 2784 Pls
4994 4050 Pls
1484 2878 Pls
1316 2883 Pls
1594 2876 Pls
1468 2771 Pls
1503 2872 Pls
1436 2867 Pls
1393 2864 Pls
1281 2829 Pls
1352 2889 Pls
5793 3144 Pls
1395 2780 Pls
1462 2768 Pls
1339 2850 Pls
1375 2852 Pls
1352 2797 Pls
1711 2899 Pls
1551 2838 Pls
1668 2902 Pls
1472 2868 Pls
4907 2929 Pls
1462 2827 Pls
1305 2844 Pls
1481 2766 Pls
1484 2858 Pls
1491 2860 Pls
1644 2741 Pls
1516 2836 Pls
1548 2841 Pls
1560 2926 Pls
1653 2888 Pls
1360 2851 Pls
1731 2881 Pls
1601 2875 Pls
1352 2874 Pls
1554 2912 Pls
1525 2861 Pls
1484 2935 Pls
1463 2835 Pls
1515 2817 Pls
1290 2802 Pls
1299 2866 Pls
1597 2861 Pls
1478 2859 Pls
1577 2884 Pls
1614 2946 Pls
1594 2764 Pls
1281 2827 Pls
1310 2844 Pls
1653 2851 Pls
1415 2800 Pls
1662 2901 Pls
1642 2821 Pls
2015 2883 Pls
1398 2845 Pls
1755 2851 Pls
1425 2871 Pls
2320 2866 Pls
1225 2862 Pls
1422 2949 Pls
1279 2835 Pls
5033 2890 Pls
1346 2838 Pls
1366 2822 Pls
1360 2911 Pls
1377 2949 Pls
1374 2833 Pls
1492 2854 Pls
1226 2809 Pls
1583 2861 Pls
1690 2892 Pls
1380 2851 Pls
1402 2862 Pls
1580 2808 Pls
2780 3104 Pls
2296 2788 Pls
1542 2864 Pls
1387 2843 Pls
1237 2844 Pls
3614 3041 Pls
1381 2841 Pls
1506 2830 Pls
1506 2800 Pls
1442 2883 Pls
1329 2790 Pls
1261 2867 Pls
1267 2895 Pls
1313 2830 Pls
1301 2843 Pls
2010 2820 Pls
1103 2886 Pls
1249 2830 Pls
1223 2933 Pls
1352 2843 Pls
1443 2841 Pls
1337 2860 Pls
1507 2896 Pls
1407 2852 Pls
1413 2866 Pls
1377 2897 Pls
1477 2876 Pls
1474 2844 Pls
1320 2905 Pls
1437 2869 Pls
1331 2871 Pls
1413 2831 Pls
1217 2864 Pls
1326 2832 Pls
1307 2854 Pls
1495 2864 Pls
1340 2868 Pls
1471 2790 Pls
1322 2871 Pls
1354 2865 Pls
1451 2894 Pls
1407 2854 Pls
1814 2782 Pls
1638 2815 Pls
1597 2874 Pls
1371 2839 Pls
1412 2808 Pls
1577 2825 Pls
1652 2949 Pls
1267 2807 Pls
1358 2848 Pls
1366 2890 Pls
1480 2863 Pls
1337 2841 Pls
1503 2843 Pls
1273 2831 Pls
1633 2830 Pls
3970 2624 Pls
1506 2833 Pls
1311 2862 Pls
1322 2907 Pls
1500 2804 Pls
1454 2847 Pls
1339 2822 Pls
1308 2882 Pls
1325 2875 Pls
1398 2776 Pls
1446 2818 Pls
1491 2857 Pls
1285 2835 Pls
1536 2857 Pls
1288 2793 Pls
1282 2849 Pls
5562 3583 Pls
1468 2841 Pls
1326 2863 Pls
1457 2839 Pls
1480 2897 Pls
1402 2918 Pls
1649 2919 Pls
5074 1447 Pls
1579 2874 Pls
1202 2843 Pls
1377 2851 Pls
1295 2868 Pls
1275 2818 Pls
6832 4802 Pls
1.000 UP
1.000 UL
LT1
LTb
6549 4662 M
(CBC) Rshow
LT1
5989 640 Crs
3575 2885 Crs
1579 2804 Crs
1576 2921 Crs
1404 2875 Crs
1510 2919 Crs
1402 2905 Crs
1308 2887 Crs
1550 2901 Crs
1694 2882 Crs
1469 2876 Crs
1401 2825 Crs
1585 2870 Crs
1440 2838 Crs
1418 2839 Crs
2803 3003 Crs
1328 2853 Crs
1328 2864 Crs
1270 2865 Crs
1366 2868 Crs
1311 2845 Crs
1498 2811 Crs
1421 2874 Crs
1474 2917 Crs
1460 2826 Crs
1506 2891 Crs
1387 2876 Crs
1469 2892 Crs
1445 2810 Crs
3628 2911 Crs
1495 2872 Crs
1393 2880 Crs
1364 2818 Crs
1598 2827 Crs
1363 2870 Crs
1428 2787 Crs
1205 2790 Crs
1630 2862 Crs
1329 2908 Crs
1527 2832 Crs
1718 2973 Crs
4606 2759 Crs
1459 2872 Crs
1305 2879 Crs
1367 2859 Crs
1363 2829 Crs
1474 2867 Crs
1604 2927 Crs
1357 2856 Crs
1583 2839 Crs
1844 2855 Crs
1392 2848 Crs
1357 2847 Crs
1548 2866 Crs
1653 2801 Crs
1579 2925 Crs
1598 2877 Crs
1443 2859 Crs
1250 2882 Crs
1623 2874 Crs
1325 2853 Crs
1571 2783 Crs
1234 2929 Crs
1440 2847 Crs
1430 2898 Crs
1699 2827 Crs
1250 2890 Crs
1348 2824 Crs
1624 2781 Crs
1339 2878 Crs
1301 2803 Crs
1550 2872 Crs
5626 4639 Crs
1515 2925 Crs
1890 2873 Crs
1372 2876 Crs
1209 2856 Crs
1407 2869 Crs
1494 2880 Crs
1410 2862 Crs
2792 2940 Crs
1494 2792 Crs
1319 2864 Crs
1313 2862 Crs
1446 2854 Crs
1343 2877 Crs
1506 2846 Crs
1372 2872 Crs
1343 2863 Crs
1516 2808 Crs
1583 2914 Crs
1734 2926 Crs
1463 2913 Crs
1539 2854 Crs
1468 2898 Crs
1586 2897 Crs
1269 2854 Crs
5659 2694 Crs
1478 2894 Crs
1252 2801 Crs
1563 2873 Crs
1466 2806 Crs
1471 2827 Crs
1231 2798 Crs
1412 2854 Crs
1380 2849 Crs
1418 2884 Crs
1346 2872 Crs
1439 2851 Crs
1779 2878 Crs
1364 2881 Crs
1393 2886 Crs
1316 2860 Crs
1750 2814 Crs
1383 2817 Crs
1548 2880 Crs
1851 2887 Crs
1522 2922 Crs
1393 2846 Crs
1234 2883 Crs
1320 2884 Crs
1232 2916 Crs
1507 2807 Crs
1366 2873 Crs
2663 2845 Crs
1355 2915 Crs
1472 2860 Crs
1389 2829 Crs
1515 2870 Crs
1292 2878 Crs
1322 2891 Crs
1475 2882 Crs
2446 3077 Crs
1507 2851 Crs
1252 2792 Crs
1995 2893 Crs
1465 2898 Crs
1498 2833 Crs
1703 2819 Crs
1500 2919 Crs
2613 2952 Crs
1443 2905 Crs
1319 2875 Crs
3423 3045 Crs
1419 2820 Crs
1254 2822 Crs
1387 2835 Crs
1264 2773 Crs
1295 2881 Crs
1216 2873 Crs
1395 2781 Crs
1219 2901 Crs
1284 2857 Crs
1536 2844 Crs
1149 2916 Crs
2028 2936 Crs
1577 2847 Crs
1697 2805 Crs
1481 2841 Crs
1390 2913 Crs
1333 2823 Crs
1243 2917 Crs
1329 2851 Crs
1492 2918 Crs
1293 2814 Crs
1281 2867 Crs
1491 2842 Crs
1422 2861 Crs
1521 2843 Crs
1188 2841 Crs
1738 2888 Crs
1354 2859 Crs
1445 2888 Crs
1323 2873 Crs
1351 2898 Crs
1577 2797 Crs
1311 2869 Crs
1302 2907 Crs
1247 2869 Crs
1472 2869 Crs
1377 2827 Crs
1437 2826 Crs
1615 2822 Crs
1336 2900 Crs
1509 2931 Crs
1412 2871 Crs
1548 2811 Crs
1366 2872 Crs
1260 2847 Crs
1419 2930 Crs
1530 2917 Crs
1559 2864 Crs
1355 2892 Crs
1282 2934 Crs
1497 2843 Crs
1500 2839 Crs
1264 2847 Crs
1480 2874 Crs
1475 2858 Crs
1250 2869 Crs
1369 2846 Crs
1354 2851 Crs
1333 2883 Crs
1532 2818 Crs
1386 2850 Crs
1583 2884 Crs
1360 2841 Crs
1802 2833 Crs
1237 2861 Crs
1547 2845 Crs
1518 2832 Crs
2136 2948 Crs
2513 2853 Crs
1326 2838 Crs
1399 2876 Crs
1565 2816 Crs
1650 2833 Crs
1468 2744 Crs
1728 2889 Crs
1446 2910 Crs
1641 2884 Crs
1333 2799 Crs
1398 2844 Crs
1269 2849 Crs
6832 4662 Crs
1.000 UL
LTb
854 4872 N
854 448 L
5317 0 V
0 4424 V
-5317 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
