%!PS-Adobe-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Mon Jan 30 17:51:50 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Alexey Larionov)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jan 30 17:51:50 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
854 448 M
63 0 V
5254 0 R
-63 0 V
770 448 M
(-1) Rshow
1.000 UL
LTb
854 1185 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
(-0.8) Rshow
1.000 UL
LTb
854 1923 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
(-0.6) Rshow
1.000 UL
LTb
854 2660 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
(-0.4) Rshow
1.000 UL
LTb
854 3397 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
(-0.2) Rshow
1.000 UL
LTb
854 4135 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0) Rshow
1.000 UL
LTb
854 4872 M
63 0 V
5254 0 R
-63 0 V
-5338 0 R
( 0.2) Rshow
1.000 UL
LTb
854 448 M
0 63 V
0 4361 R
0 -63 V
854 308 M
(-0.3) Cshow
1.000 UL
LTb
1614 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.25) Cshow
1.000 UL
LTb
2373 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.2) Cshow
1.000 UL
LTb
3133 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.15) Cshow
1.000 UL
LTb
3892 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.1) Cshow
1.000 UL
LTb
4652 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.05) Cshow
1.000 UL
LTb
5411 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0) Cshow
1.000 UL
LTb
6171 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.05) Cshow
1.000 UL
LTb
1.000 UL
LTb
854 4872 N
854 448 L
5317 0 V
0 4424 V
-5317 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(eigenvector 2) Cshow
grestore
LTb
LCb setrgbcolor
3512 98 M
(eigenvector 1) Cshow
LTb
3512 4802 M
() Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6549 4802 M
(UBC) Rshow
LT0
5636 4094 Pls
5606 4154 Pls
5451 4169 Pls
5617 4181 Pls
5562 4163 Pls
5478 4171 Pls
5512 4140 Pls
5544 4112 Pls
5699 4160 Pls
5594 4140 Pls
5563 4142 Pls
5478 3966 Pls
2735 3780 Pls
5656 4122 Pls
5560 4124 Pls
5623 4121 Pls
5402 4131 Pls
5370 4184 Pls
1939 4492 Pls
5753 4158 Pls
2154 4187 Pls
2958 4220 Pls
5665 4144 Pls
5791 4149 Pls
5665 4160 Pls
5446 4105 Pls
5534 4174 Pls
5659 4118 Pls
4380 4124 Pls
5548 4167 Pls
2592 4325 Pls
5674 4175 Pls
5648 4164 Pls
5662 4136 Pls
5621 4174 Pls
5603 4110 Pls
5755 4226 Pls
4246 4174 Pls
4995 4096 Pls
5425 4127 Pls
5700 4228 Pls
5191 4226 Pls
5600 4096 Pls
5349 4153 Pls
5805 4173 Pls
5621 4145 Pls
5712 4160 Pls
5390 4163 Pls
5586 4127 Pls
5481 4168 Pls
5613 4145 Pls
5667 4136 Pls
5641 4153 Pls
5723 4139 Pls
5603 4178 Pls
4969 4085 Pls
5727 4199 Pls
5720 4192 Pls
5006 4273 Pls
5503 4102 Pls
5853 4159 Pls
5749 4156 Pls
5328 4113 Pls
5654 4164 Pls
5497 4158 Pls
5506 4136 Pls
5553 3984 Pls
5841 4078 Pls
5651 4054 Pls
5782 4171 Pls
5471 4121 Pls
2733 4105 Pls
5542 4170 Pls
5724 4079 Pls
5463 4142 Pls
5603 4120 Pls
5538 4181 Pls
5579 4172 Pls
5613 4134 Pls
5747 4153 Pls
5697 4186 Pls
2227 3938 Pls
5629 4143 Pls
5533 4073 Pls
4251 3019 Pls
5717 4178 Pls
5662 4115 Pls
5639 4097 Pls
5396 4111 Pls
5500 4152 Pls
5411 4153 Pls
5588 4145 Pls
2799 4194 Pls
5629 4111 Pls
5761 4156 Pls
5604 4138 Pls
5568 4116 Pls
1276 4132 Pls
5522 4157 Pls
5399 4147 Pls
5530 4170 Pls
5592 4112 Pls
5519 4044 Pls
5483 4162 Pls
5689 4103 Pls
5396 4181 Pls
2841 4064 Pls
5490 4149 Pls
5686 4174 Pls
5475 4163 Pls
5530 4094 Pls
5572 4114 Pls
5624 4172 Pls
5548 4139 Pls
5699 4146 Pls
5758 4165 Pls
5521 3995 Pls
5563 4158 Pls
5472 4127 Pls
5495 4193 Pls
5475 4126 Pls
5759 4100 Pls
5706 4174 Pls
5419 4130 Pls
5638 4124 Pls
5436 4179 Pls
5442 4153 Pls
5111 4131 Pls
5659 4183 Pls
5395 4101 Pls
5638 4125 Pls
4933 4111 Pls
5796 4173 Pls
5665 4198 Pls
5775 4150 Pls
2706 4268 Pls
5709 4194 Pls
5629 4104 Pls
5601 4145 Pls
5683 4107 Pls
5659 4150 Pls
5525 4166 Pls
5770 4172 Pls
5513 4177 Pls
5380 4115 Pls
5624 4058 Pls
5677 4113 Pls
5411 4284 Pls
5524 4051 Pls
4310 4019 Pls
4579 4127 Pls
4849 4139 Pls
5538 4132 Pls
5700 4116 Pls
5863 4165 Pls
3643 4118 Pls
5648 4188 Pls
5556 4061 Pls
5621 4134 Pls
5636 4139 Pls
5726 4089 Pls
5765 4166 Pls
5706 4107 Pls
5726 4161 Pls
5753 4179 Pls
5158 4027 Pls
5869 4144 Pls
5811 4139 Pls
5758 4165 Pls
5685 4174 Pls
5650 4115 Pls
5721 4142 Pls
5615 4169 Pls
5677 4143 Pls
5607 4110 Pls
5706 4166 Pls
5542 4119 Pls
2422 4143 Pls
5600 4154 Pls
5656 4142 Pls
5617 4163 Pls
5708 4151 Pls
5620 4155 Pls
5844 4193 Pls
5717 4217 Pls
5677 4177 Pls
5560 4158 Pls
5665 4096 Pls
5612 4144 Pls
5696 4132 Pls
5677 4147 Pls
5595 4185 Pls
5659 4164 Pls
5275 4183 Pls
5402 4035 Pls
5506 4144 Pls
5741 4096 Pls
5658 4127 Pls
5472 4100 Pls
5448 4120 Pls
5785 4173 Pls
5712 4144 Pls
5729 4089 Pls
5547 4152 Pls
5721 4144 Pls
5548 4106 Pls
5761 4104 Pls
5433 4144 Pls
3371 4156 Pls
5548 4150 Pls
5723 4163 Pls
5692 4172 Pls
5544 4142 Pls
5582 4165 Pls
5732 4156 Pls
5755 4136 Pls
5694 4147 Pls
5635 4067 Pls
5651 4104 Pls
5582 4187 Pls
5773 4161 Pls
5533 4154 Pls
5677 4141 Pls
5738 4141 Pls
2404 3918 Pls
5674 4100 Pls
5706 4146 Pls
5541 4198 Pls
5601 4167 Pls
5683 4147 Pls
5455 4143 Pls
2826 4045 Pls
5460 4116 Pls
5860 4128 Pls
5658 4197 Pls
5697 4170 Pls
5784 4176 Pls
6832 4802 Pls
1.000 UP
1.000 UL
LT1
LTb
6549 4662 M
(CBC) Rshow
LT1
2159 4243 Crs
3882 4094 Crs
5455 4101 Crs
5454 4184 Crs
5639 4173 Crs
5568 4230 Crs
5598 4122 Crs
5741 4168 Crs
5515 4151 Crs
5381 4144 Crs
5547 4148 Crs
5623 4101 Crs
5493 4126 Crs
5580 4196 Crs
1717 4657 Crs
5615 4094 Crs
4368 4151 Crs
2432 3838 Crs
5653 4128 Crs
5703 4126 Crs
5761 4169 Crs
5641 4172 Crs
5737 4145 Crs
5498 4139 Crs
5539 4166 Crs
5595 4157 Crs
5647 4160 Crs
5568 4135 Crs
5683 4175 Crs
5659 4150 Crs
5641 4111 Crs
3749 4132 Crs
5556 4151 Crs
5594 4147 Crs
5735 4088 Crs
5507 4180 Crs
5732 4170 Crs
5651 4123 Crs
5762 4211 Crs
5556 848 Crs
5465 4094 Crs
5679 4162 Crs
5497 4137 Crs
5367 4188 Crs
2982 4044 Crs
5568 4134 Crs
5709 4138 Crs
5682 4167 Crs
5606 4232 Crs
5589 4105 Crs
5348 4195 Crs
5654 4158 Crs
5481 4174 Crs
5184 4188 Crs
5691 4178 Crs
5712 4122 Crs
5569 4148 Crs
5405 4150 Crs
5445 4107 Crs
5463 4139 Crs
5609 4155 Crs
5767 4156 Crs
5414 4142 Crs
5691 4158 Crs
5486 4127 Crs
5779 4111 Crs
5604 4159 Crs
5582 4146 Crs
5370 4125 Crs
5752 4232 Crs
5632 4140 Crs
5492 4178 Crs
5661 4075 Crs
5677 4187 Crs
5544 4113 Crs
2361 4353 Crs
5571 4114 Crs
5170 4130 Crs
5592 4198 Crs
5823 4162 Crs
5680 4150 Crs
5531 4142 Crs
5600 4127 Crs
4514 4155 Crs
5557 4158 Crs
5689 4108 Crs
5709 4151 Crs
5604 4154 Crs
5670 4120 Crs
5548 4180 Crs
5651 4090 Crs
5662 4175 Crs
5495 4195 Crs
5389 4088 Crs
5297 4162 Crs
5531 4139 Crs
5497 4108 Crs
5533 4130 Crs
5413 4141 Crs
5744 4134 Crs
2302 4159 Crs
5600 4126 Crs
5782 4187 Crs
5493 4175 Crs
5572 4095 Crs
5577 4178 Crs
5796 4143 Crs
5604 4176 Crs
5674 4139 Crs
5609 4161 Crs
5670 4174 Crs
5683 4072 Crs
5331 4093 Crs
5677 4135 Crs
5662 4163 Crs
5697 4177 Crs
5378 4135 Crs
5711 4100 Crs
5492 4149 Crs
5253 4116 Crs
5556 4176 Crs
5633 4138 Crs
5817 4169 Crs
5743 4116 Crs
5727 4203 Crs
5586 4128 Crs
5726 4141 Crs
4626 4128 Crs
5746 4191 Crs
5670 4116 Crs
5667 4180 Crs
5557 4108 Crs
5730 4149 Crs
5733 4110 Crs
5588 4187 Crs
4580 4256 Crs
5516 4137 Crs
5749 4115 Crs
5076 4142 Crs
5582 4165 Crs
5618 4106 Crs
5384 4130 Crs
5548 4156 Crs
4617 4097 Crs
5615 4186 Crs
5709 4131 Crs
3871 4187 Crs
5592 4114 Crs
5779 4106 Crs
5626 4140 Crs
5732 4123 Crs
5721 4087 Crs
5732 4153 Crs
5582 4219 Crs
5838 4159 Crs
5673 4098 Crs
5550 4112 Crs
5869 4148 Crs
5067 4154 Crs
5475 4107 Crs
5375 4156 Crs
5569 4166 Crs
5674 4193 Crs
5685 4130 Crs
5781 4185 Crs
5723 4142 Crs
5534 4126 Crs
5718 4180 Crs
5706 4167 Crs
5569 4093 Crs
5612 4167 Crs
5579 4134 Crs
5853 4214 Crs
5325 4182 Crs
5620 4222 Crs
5630 4097 Crs
5635 4141 Crs
5699 4146 Crs
5463 4137 Crs
5662 4150 Crs
5714 4170 Crs
5764 4174 Crs
5598 4164 Crs
5617 4121 Crs
5624 4100 Crs
5512 4114 Crs
5747 4163 Crs
5577 4123 Crs
5624 4144 Crs
5528 4068 Crs
5680 4195 Crs
5781 4155 Crs
5630 4212 Crs
5497 4161 Crs
5481 4173 Crs
5708 4184 Crs
5797 4131 Crs
5533 4153 Crs
5574 4141 Crs
5743 4142 Crs
5542 4133 Crs
5597 4165 Crs
5816 4100 Crs
5702 4178 Crs
5667 4163 Crs
5717 4152 Crs
5440 4062 Crs
5662 4167 Crs
5440 4144 Crs
5705 4132 Crs
5302 4137 Crs
5838 4141 Crs
5528 4129 Crs
5498 4152 Crs
5023 4041 Crs
4681 4052 Crs
5724 4143 Crs
5650 4176 Crs
5545 4130 Crs
5424 4166 Crs
5623 4232 Crs
5331 4172 Crs
5589 4172 Crs
5468 4134 Crs
5714 4114 Crs
5633 4114 Crs
5778 4181 Crs
6832 4662 Crs
1.000 UL
LTb
854 4872 N
854 448 L
5317 0 V
0 4424 V
-5317 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
