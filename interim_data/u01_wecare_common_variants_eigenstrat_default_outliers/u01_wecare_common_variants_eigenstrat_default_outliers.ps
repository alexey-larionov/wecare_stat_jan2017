%!PS-Adobe-2.0
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri Feb 10 10:47:54 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Alexey Larionov)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Feb 10 10:47:54 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
938 448 M
63 0 V
5170 0 R
-63 0 V
854 448 M
(-0.1) Rshow
1.000 UL
LTb
938 1185 M
63 0 V
5170 0 R
-63 0 V
-5254 0 R
(-0.05) Rshow
1.000 UL
LTb
938 1923 M
63 0 V
5170 0 R
-63 0 V
-5254 0 R
( 0) Rshow
1.000 UL
LTb
938 2660 M
63 0 V
5170 0 R
-63 0 V
-5254 0 R
( 0.05) Rshow
1.000 UL
LTb
938 3397 M
63 0 V
5170 0 R
-63 0 V
-5254 0 R
( 0.1) Rshow
1.000 UL
LTb
938 4135 M
63 0 V
5170 0 R
-63 0 V
-5254 0 R
( 0.15) Rshow
1.000 UL
LTb
938 4872 M
63 0 V
5170 0 R
-63 0 V
-5254 0 R
( 0.2) Rshow
1.000 UL
LTb
938 448 M
0 63 V
0 4361 R
0 -63 V
938 308 M
(-0.2) Cshow
1.000 UL
LTb
1810 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.15) Cshow
1.000 UL
LTb
2682 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.1) Cshow
1.000 UL
LTb
3554 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.05) Cshow
1.000 UL
LTb
4427 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0) Cshow
1.000 UL
LTb
5299 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.05) Cshow
1.000 UL
LTb
6171 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.1) Cshow
1.000 UL
LTb
1.000 UL
LTb
938 4872 N
938 448 L
5233 0 V
0 4424 V
-5233 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(eigenvector 2) Cshow
grestore
LTb
LCb setrgbcolor
3554 98 M
(eigenvector 1) Cshow
LTb
3554 4802 M
() Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6549 4802 M
(UBC) Rshow
LT0
4769 2173 Pls
4852 1843 Pls
4102 2100 Pls
4779 1390 Pls
4652 1343 Pls
4306 1249 Pls
4455 1555 Pls
4568 3776 Pls
4810 1467 Pls
4505 2238 Pls
4629 2452 Pls
4315 3393 Pls
2152 1911 Pls
4823 3512 Pls
4537 2427 Pls
4645 1457 Pls
4312 1320 Pls
4331 1426 Pls
1479 1949 Pls
5199 1265 Pls
3975 1614 Pls
1845 1607 Pls
2316 1716 Pls
4814 2992 Pls
4978 1558 Pls
4650 1358 Pls
4310 1325 Pls
4481 1263 Pls
4781 1511 Pls
2492 1530 Pls
4653 2877 Pls
1885 1553 Pls
4817 1075 Pls
4681 2414 Pls
4612 1617 Pls
4626 1234 Pls
4582 2179 Pls
4994 1753 Pls
3014 1989 Pls
3703 2070 Pls
4399 1752 Pls
4999 1150 Pls
3832 1523 Pls
4845 3276 Pls
3930 1038 Pls
5086 1275 Pls
4615 3524 Pls
4789 1507 Pls
4280 2063 Pls
4767 1340 Pls
4353 1638 Pls
4769 3297 Pls
4592 2889 Pls
4563 1299 Pls
4945 2188 Pls
4755 3372 Pls
3251 2551 Pls
4906 1120 Pls
4936 1314 Pls
3659 1641 Pls
4564 2337 Pls
5117 1901 Pls
4898 2600 Pls
3996 1937 Pls
4470 1654 Pls
3258 1156 Pls
4428 1843 Pls
4531 1435 Pls
4606 3947 Pls
5391 3981 Pls
4664 2483 Pls
5100 1221 Pls
4306 2293 Pls
2067 2316 Pls
4488 1545 Pls
4789 1729 Pls
4453 3824 Pls
4776 2240 Pls
4509 994 Pls
4699 1532 Pls
4561 2021 Pls
4983 2308 Pls
5053 1193 Pls
1807 2216 Pls
4810 1415 Pls
4367 2622 Pls
2702 2277 Pls
4812 1592 Pls
4824 2021 Pls
4674 2725 Pls
4174 1967 Pls
4420 1697 Pls
4420 2452 Pls
4524 1551 Pls
1756 2054 Pls
4631 2368 Pls
4922 1567 Pls
4599 1418 Pls
4612 2256 Pls
1500 1830 Pls
1259 2527 Pls
4479 2408 Pls
4441 2285 Pls
4421 1676 Pls
4577 1303 Pls
4484 2625 Pls
4364 1342 Pls
4938 1958 Pls
4062 1814 Pls
1725 2044 Pls
4315 1479 Pls
4861 1259 Pls
4514 1762 Pls
4523 2998 Pls
4702 2465 Pls
4605 997 Pls
4537 3349 Pls
4871 1225 Pls
5178 1800 Pls
4472 1697 Pls
4435 1440 Pls
2606 2622 Pls
4319 1699 Pls
4519 2125 Pls
4551 2656 Pls
5192 2518 Pls
4964 1839 Pls
4093 1163 Pls
4653 1212 Pls
4249 1766 Pls
4170 1231 Pls
3720 1980 Pls
4718 1368 Pls
4299 2297 Pls
4788 1467 Pls
3261 2033 Pls
5090 1878 Pls
4842 963 Pls
4957 1336 Pls
1400 1878 Pls
4941 1126 Pls
4498 1328 Pls
4610 2117 Pls
4915 3291 Pls
4659 1494 Pls
4465 1393 Pls
4997 1390 Pls
4397 858 Pls
4240 4303 Pls
4676 2451 Pls
4990 2165 Pls
4327 1196 Pls
4306 1426 Pls
2632 1991 Pls
3188 1604 Pls
3698 2247 Pls
4448 1510 Pls
4823 1387 Pls
5182 2067 Pls
2374 1747 Pls
4718 1709 Pls
4458 2194 Pls
4708 1831 Pls
4650 2423 Pls
4964 1520 Pls
5103 2712 Pls
4861 1964 Pls
4981 1585 Pls
4946 1057 Pls
3814 3120 Pls
5063 2082 Pls
5384 2229 Pls
5163 1799 Pls
4814 1654 Pls
4760 2580 Pls
4800 1384 Pls
4598 1697 Pls
4741 2818 Pls
4694 2418 Pls
5069 3203 Pls
4491 2083 Pls
1889 1384 Pls
4645 1614 Pls
4992 1377 Pls
4781 1930 Pls
4983 1355 Pls
4612 1660 Pls
5353 2619 Pls
4845 1328 Pls
4760 1517 Pls
4592 1144 Pls
4871 2628 Pls
4509 1932 Pls
4971 1087 Pls
4814 1322 Pls
4549 1858 Pls
4622 2169 Pls
4093 1684 Pls
4181 1850 Pls
4359 3035 Pls
4945 3442 Pls
4964 2290 Pls
3190 1591 Pls
4256 1707 Pls
4294 1688 Pls
5083 1582 Pls
4749 1858 Pls
4924 1548 Pls
4594 1912 Pls
4901 1678 Pls
4685 1576 Pls
5013 1570 Pls
4149 1433 Pls
2363 2423 Pls
4599 2409 Pls
4945 1734 Pls
4786 1614 Pls
4530 1146 Pls
4749 1921 Pls
4858 1707 Pls
5072 2710 Pls
4922 1508 Pls
4646 2788 Pls
4666 1755 Pls
4666 1737 Pls
5100 1084 Pls
4503 2024 Pls
5023 2176 Pls
4786 1903 Pls
1707 1700 Pls
4858 3206 Pls
4936 2182 Pls
4594 1955 Pls
4671 1471 Pls
4800 1308 Pls
4306 1519 Pls
2208 1699 Pls
4216 1995 Pls
5006 1598 Pls
4884 3344 Pls
4899 1314 Pls
4964 1104 Pls
6832 4802 Pls
1.000 UP
1.000 UL
LT1
LTb
6549 4662 M
(CBC) Rshow
LT1
1451 2030 Crs
1904 3356 Crs
4362 1735 Crs
4310 1150 Crs
4777 1575 Crs
4660 1227 Crs
4728 4126 Crs
1829 1595 Crs
4863 3039 Crs
4591 1638 Crs
4303 1082 Crs
4530 1598 Crs
4659 2741 Crs
4469 2501 Crs
4449 1311 Crs
3186 1306 Crs
1355 1903 Crs
4646 1613 Crs
3141 1840 Crs
1714 1958 Crs
1222 1973 Crs
4838 1389 Crs
4767 1896 Crs
5044 2110 Crs
4913 1715 Crs
4943 1417 Crs
4514 1533 Crs
4826 1230 Crs
4940 1600 Crs
4924 1811 Crs
4563 1477 Crs
4896 2768 Crs
4967 3919 Crs
4709 1558 Crs
2257 1982 Crs
4420 1640 Crs
4653 1514 Crs
5063 4673 Crs
4428 1325 Crs
4877 1685 Crs
4657 902 Crs
4995 1109 Crs
4725 2790 Crs
4306 1567 Crs
5009 3020 Crs
4482 1333 Crs
4066 1637 Crs
1815 2017 Crs
4472 1458 Crs
4873 2334 Crs
4772 1471 Crs
4646 1532 Crs
4066 1498 Crs
4915 1507 Crs
4378 1569 Crs
4066 1814 Crs
4833 739 Crs
4919 2041 Crs
4812 2269 Crs
4402 1825 Crs
4488 1663 Crs
4322 1592 Crs
4751 1892 Crs
2019 3403 Crs
5018 1315 Crs
3905 2464 Crs
4781 2209 Crs
4566 1345 Crs
4994 2181 Crs
4711 1579 Crs
4683 1185 Crs
3860 1281 Crs
5079 1042 Crs
4875 2538 Crs
4620 1842 Crs
4631 1836 Crs
4960 1592 Crs
4439 3377 Crs
1782 1606 Crs
4671 3595 Crs
3882 1918 Crs
4671 1520 Crs
5042 1884 Crs
4741 1300 Crs
4442 1197 Crs
4650 1638 Crs
2750 1769 Crs
4491 1780 Crs
4896 3473 Crs
4999 2113 Crs
4783 1376 Crs
4763 3585 Crs
4578 1089 Crs
4845 2514 Crs
4481 1669 Crs
4362 2805 Crs
4270 2389 Crs
4113 3353 Crs
4545 2308 Crs
4481 3683 Crs
4407 1455 Crs
4285 1839 Crs
4983 1461 Crs
1615 1927 Crs
4528 1601 Crs
5121 2709 Crs
4460 3300 Crs
4650 1811 Crs
4420 1174 Crs
5208 2455 Crs
4619 1946 Crs
4892 1517 Crs
4887 1684 Crs
4800 1215 Crs
4905 1881 Crs
4141 1635 Crs
5011 2523 Crs
4882 2614 Crs
4828 1365 Crs
4053 1542 Crs
5013 4523 Crs
4564 1106 Crs
4052 2162 Crs
4711 1109 Crs
4756 1318 Crs
5110 2008 Crs
4952 1699 Crs
5027 2663 Crs
4441 1940 Crs
4873 1430 Crs
3078 1666 Crs
5044 1116 Crs
4864 1551 Crs
4835 1010 Crs
2443 2195 Crs
4491 1746 Crs
4999 1558 Crs
5058 3683 Crs
4542 2841 Crs
3621 1609 Crs
4578 1541 Crs
4885 3088 Crs
3621 1483 Crs
4603 1343 Crs
4659 2035 Crs
3956 1320 Crs
4524 2051 Crs
3518 2564 Crs
4819 1670 Crs
4940 1241 Crs
2572 1973 Crs
4917 2515 Crs
5220 1889 Crs
4784 4216 Crs
4933 2135 Crs
4973 1790 Crs
5011 1230 Crs
5074 2036 Crs
4898 2209 Crs
4458 1861 Crs
5313 1089 Crs
3682 1850 Crs
4559 1791 Crs
4200 1480 Crs
4660 1290 Crs
4973 1728 Crs
4861 2138 Crs
5096 1473 Crs
5028 1729 Crs
4645 2145 Crs
4809 1154 Crs
4777 1371 Crs
4463 2080 Crs
4646 1261 Crs
4575 1011 Crs
5206 1287 Crs
4237 1759 Crs
4796 1286 Crs
4802 2156 Crs
4687 2144 Crs
4915 2136 Crs
4385 1647 Crs
4873 1759 Crs
4873 2837 Crs
5006 1389 Crs
4606 1855 Crs
4735 1594 Crs
4653 1607 Crs
4399 1311 Crs
3188 1240 Crs
5185 1243 Crs
4721 2399 Crs
4727 1429 Crs
4399 2069 Crs
4713 1729 Crs
5095 2206 Crs
4868 1112 Crs
4495 1331 Crs
4376 2541 Crs
5027 1256 Crs
5140 2527 Crs
4371 1753 Crs
4776 2113 Crs
5219 2365 Crs
4557 2253 Crs
4753 3253 Crs
5250 2877 Crs
5009 1274 Crs
4875 1579 Crs
5035 2936 Crs
4360 1393 Crs
4948 2160 Crs
4371 1309 Crs
5034 2023 Crs
3978 2036 Crs
5035 3052 Crs
4346 1275 Crs
4327 1641 Crs
3748 4023 Crs
3385 1850 Crs
4812 1607 Crs
4946 1539 Crs
4362 2427 Crs
4053 1566 Crs
4692 1696 Crs
3837 1353 Crs
4709 1331 Crs
4441 1890 Crs
4776 2194 Crs
4800 3520 Crs
4980 1262 Crs
6832 4662 Crs
1.000 UL
LTb
938 4872 N
938 448 L
5233 0 V
0 4424 V
-5233 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
