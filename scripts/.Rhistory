# Update colnames, when necessary
colnames(gt.df) <- sub(".GT", "", colnames(gt.df))
colnames(gq.df) <- sub(".GQ", "", colnames(gq.df))
colnames(dp.df) <- sub(".DP", "", colnames(dp.df))
# Clean-up
rm(source_data_folder, prefix, covar_file, demographics_file, samples_file, vv_file, gt_file, gq_file, dp_file, kgen_file, exac_file, phenotypes_update_file, BRCA1_BRCA2_PALB2_cases_file)
dim(gt.df)
str(gt.df, list.len=5)
gt.df[1:5,1:5]
dim(gq.df)
str(gq.df, list.len=5)
gq.df[1:5,1:5]
dim(dp.df)
str(dp.df, list.len=5)
dp.df[1:5,1:5]
dim(covar.df)
str(covar.df)
covar.df[1:5,1:5]
dim(samples.df)
str(samples.df)
samples.df[1:5,]
dim(demographics.df)
str(demographics.df)
demographics.df[1:5,1:5]
dim(phenotypes_update.df)
str(phenotypes_update.df)
phenotypes_update.df[1:5,1:5]
dim(BRCA1_BRCA2_PALB2_cases.df)
str(BRCA1_BRCA2_PALB2_cases.df)
BRCA1_BRCA2_PALB2_cases.df[1:5,1:5]
dim(vv.df)
str(vv.df)
vv.df[1:5,1:5]
dim(kgen.df)
str(kgen.df)
kgen.df[1:5,1:5]
dim(exac.df)
str(exac.df)
exac.df[1:5,1:5]
gt.mx <- as.matrix(gt.df)
gq.mx <- as.matrix(gq.df)
dp.mx <- as.matrix(dp.df)
dim(gt.mx)
class(gt.mx)
gt.mx[1:5,1:5]
dim(gq.mx)
class(gq.mx)
gq.mx[1:5,1:5]
dim(dp.mx)
class(dp.mx)
dp.mx[1:5,1:5]
rm(gt.df, gq.df, dp.df)
# rownames
sum(rownames(gt.mx) != rownames(gq.mx))
sum(rownames(gt.mx) != rownames(dp.mx))
sum(rownames(gt.mx) != rownames(vv.df))
sum(rownames(gt.mx) != rownames(kgen.df))
sum(rownames(gt.mx) != rownames(exac.df))
# colnames
sum(colnames(gt.mx) != colnames(gq.mx))
sum(colnames(gt.mx) != colnames(dp.mx))
NA -> vv.df[vv.df$Existing_variation == "", "Existing_variation"] # no blanks in other fields
NA -> covar.df[covar.df == ""] # 1 case in chemo_hormone (row 84)
NA -> demographics.df[demographics.df == ""] # 2 cases in registry and one in chemo_hormone
NA -> BRCA1_BRCA2_PALB2_cases.df[BRCA1_BRCA2_PALB2_cases.df == ""] # 8 cases in notes
# No blanks in other tables
# Converst factors to vectors (to symplify comparisons)
str(phenotypes_update.df)
as.character(phenotypes_update.df$gwas_id) -> phenotypes_update.df$gwas_id
as.character(phenotypes_update.df$wes_id) -> phenotypes_update.df$wes_id
trimws(as.character(phenotypes_update.df$hist_cat)) -> phenotypes_update.df$hist_cat
trimws(as.character(phenotypes_update.df$chemo_cat)) -> phenotypes_update.df$chemo_cat
as.character(phenotypes_update.df$er1) -> phenotypes_update.df$er1
as.character(phenotypes_update.df$pr1) -> phenotypes_update.df$pr1
as.character(phenotypes_update.df$hormone) -> phenotypes_update.df$hormone
NA -> phenotypes_update.df[phenotypes_update.df$er1 == "missing", "er1"]
NA -> phenotypes_update.df[phenotypes_update.df$pr1 == "missing", "pr1"]
NA -> phenotypes_update.df[phenotypes_update.df$hormone == "missing", "hormone"]
as.numeric(phenotypes_update.df$er1) -> phenotypes_update.df$er1
as.numeric(phenotypes_update.df$pr1) -> phenotypes_update.df$pr1
as.numeric(phenotypes_update.df$hormone) -> phenotypes_update.df$hormone
str(phenotypes_update.df)
save.image(paste(interim_data_folder, "r01_read_and_clean_data_jan2017.RData", sep="/"))
ls()
sessionInfo()
Sys.time()
rm(list=ls())
# Time stamp
Sys.time()
# Folders
setwd("/scratch/medgen/scripts/wecare_stat_01.17/scripts")
source_data_folder <- "/scratch/medgen/scripts/wecare_stat_01.17/source_data"
interim_data_folder <- "/scratch/medgen/scripts/wecare_stat_01.17/interim_data"
src_folder <- "/scratch/medgen/users/alexey/wecare_3_nov2016/wecare_nfe_nov2016_vqsr_shf_sma_ann_txt"
tgt_folder <- source_data_folder
prefix="wecare_nfe_nov2016_vqsr_shf_sma_ann"
gt_file <- paste(prefix,"GT_add.txt",sep="_")
gq_file <- paste(prefix,"GQ.txt",sep="_")
dp_file <- paste(prefix,"DP.txt",sep="_")
vv_file <- paste(prefix,"VV.txt",sep="_")
exac_file <- paste(prefix,"exac.txt",sep="_")
kgen_file <- paste(prefix,"kgen.txt",sep="_")
file.copy(
paste(src_folder, gt_file, sep="/"),
paste(tgt_folder, gt_file, sep="/"))
file.copy(
paste(src_folder, gq_file, sep="/"),
paste(tgt_folder, gq_file, sep="/"))
file.copy(
paste(src_folder, dp_file, sep="/"),
paste(tgt_folder, dp_file, sep="/"))
file.copy(
paste(src_folder, vv_file, sep="/"),
paste(tgt_folder, vv_file, sep="/"))
file.copy(
paste(src_folder, exac_file, sep="/"),
paste(tgt_folder, exac_file, sep="/"))
file.copy(
paste(src_folder, kgen_file, sep="/"),
paste(tgt_folder, kgen_file, sep="/"))
# Clean-up
rm(src_folder, tgt_folder)
src_folder <- "/scratch/medgen/users/alexey/wecare_stat_2_aug2016/source_data"
tgt_folder <- source_data_folder
covar_file <- "covar.txt"
samples_file <- "samples_ids.txt"
demographics_file <- "WECARE.Exome.DemographicVariables.txt"
file.copy(
paste(src_folder, covar_file, sep="/"),
paste(tgt_folder, covar_file, sep="/"))
file.copy(
paste(src_folder, samples_file, sep="/"),
paste(tgt_folder, samples_file, sep="/"))
file.copy(
paste(src_folder, demographics_file, sep="/"),
paste(tgt_folder, demographics_file, sep="/"))
# Clean-up
rm(src_folder, tgt_folder)
gt.df <- read.table(
paste(source_data_folder, gt_file, sep="/"),
header=TRUE, row.names=1, sep="\t", quote="")
gq.df <- read.table(
paste(source_data_folder, gq_file, sep="/"),
header=TRUE, row.names=1, sep="\t", quote="")
dp.df <- read.table(
paste(source_data_folder, dp_file, sep="/"),
header=TRUE, row.names=1, sep="\t", quote="")
covar.df <- read.table(
paste(source_data_folder, covar_file, sep="/"),
sep="\t", header=TRUE, quote="")
samples.df <- read.table(
paste(source_data_folder, samples_file, sep="/"),
sep="\t", header=TRUE, quote="")
demographics.df <- read.table(
paste(source_data_folder, demographics_file, sep="/"),
sep="\t", header=TRUE, quote="")
vv.df <- read.table(
paste(source_data_folder, vv_file, sep="/"),
header=TRUE, sep="\t", quote="")
kgen.df <- read.table(
paste(source_data_folder, kgen_file, sep="/"),
header=TRUE, sep="\t", quote="")
exac.df <- read.table(
paste(source_data_folder, exac_file, sep="/"),
header=TRUE, sep="\t", quote="")
phenotypes_update_file <- "phenotypes_update_06Dec2016.txt"
phenotypes_update.df <- read.table(
paste(source_data_folder, phenotypes_update_file, sep="/"),
header=TRUE, sep="\t", quote="")
BRCA1_BRCA2_PALB2_cases_file <- "cases_with_BRCA1_BRCA2_PALB2_pathogenic_variants.txt"
BRCA1_BRCA2_PALB2_cases.df <- read.table(
paste(source_data_folder, BRCA1_BRCA2_PALB2_cases_file, sep="/"),
header=TRUE, sep="\t", quote="")
# Update rownames, when necessary
rownames(vv.df) <- vv.df[,1]
rownames(kgen.df) <- kgen.df[,1]
rownames(exac.df) <- exac.df[,1]
rownames(BRCA1_BRCA2_PALB2_cases.df) <- BRCA1_BRCA2_PALB2_cases.df[,1]
# Update colnames, when necessary
colnames(gt.df) <- sub(".GT", "", colnames(gt.df))
colnames(gq.df) <- sub(".GQ", "", colnames(gq.df))
colnames(dp.df) <- sub(".DP", "", colnames(dp.df))
# Clean-up
rm(source_data_folder, prefix, covar_file, demographics_file, samples_file, vv_file, gt_file, gq_file, dp_file, kgen_file, exac_file, phenotypes_update_file, BRCA1_BRCA2_PALB2_cases_file)
dim(gt.df)
str(gt.df, list.len=5)
gt.df[1:5,1:5]
dim(gq.df)
str(gq.df, list.len=5)
gq.df[1:5,1:5]
dim(dp.df)
str(dp.df, list.len=5)
dp.df[1:5,1:5]
dim(covar.df)
str(covar.df)
covar.df[1:5,1:5]
dim(samples.df)
str(samples.df)
samples.df[1:5,]
dim(demographics.df)
str(demographics.df)
demographics.df[1:5,1:5]
dim(phenotypes_update.df)
str(phenotypes_update.df)
phenotypes_update.df[1:5,1:5]
dim(BRCA1_BRCA2_PALB2_cases.df)
str(BRCA1_BRCA2_PALB2_cases.df)
BRCA1_BRCA2_PALB2_cases.df[1:5,1:5]
dim(vv.df)
str(vv.df)
vv.df[1:5,1:5]
dim(kgen.df)
str(kgen.df)
kgen.df[1:5,1:5]
dim(exac.df)
str(exac.df)
exac.df[1:5,1:5]
gt.mx <- as.matrix(gt.df)
gq.mx <- as.matrix(gq.df)
dp.mx <- as.matrix(dp.df)
dim(gt.mx)
class(gt.mx)
gt.mx[1:5,1:5]
dim(gq.mx)
class(gq.mx)
gq.mx[1:5,1:5]
dim(dp.mx)
class(dp.mx)
dp.mx[1:5,1:5]
rm(gt.df, gq.df, dp.df)
# rownames
sum(rownames(gt.mx) != rownames(gq.mx))
sum(rownames(gt.mx) != rownames(dp.mx))
sum(rownames(gt.mx) != rownames(vv.df))
sum(rownames(gt.mx) != rownames(kgen.df))
sum(rownames(gt.mx) != rownames(exac.df))
# colnames
sum(colnames(gt.mx) != colnames(gq.mx))
sum(colnames(gt.mx) != colnames(dp.mx))
NA -> vv.df[vv.df$Existing_variation == "", "Existing_variation"] # no blanks in other fields
NA -> covar.df[covar.df == ""] # 1 case in chemo_hormone (row 84)
NA -> demographics.df[demographics.df == ""] # 2 cases in registry and one in chemo_hormone
NA -> BRCA1_BRCA2_PALB2_cases.df[BRCA1_BRCA2_PALB2_cases.df == ""] # 8 cases in notes
# No blanks in other tables
# Converst factors to vectors (to symplify comparisons)
str(phenotypes_update.df)
as.character(phenotypes_update.df$gwas_id) -> phenotypes_update.df$gwas_id
as.character(phenotypes_update.df$wes_id) -> phenotypes_update.df$wes_id
trimws(as.character(phenotypes_update.df$hist_cat)) -> phenotypes_update.df$hist_cat
trimws(as.character(phenotypes_update.df$chemo_cat)) -> phenotypes_update.df$chemo_cat
as.character(phenotypes_update.df$er1) -> phenotypes_update.df$er1
as.character(phenotypes_update.df$pr1) -> phenotypes_update.df$pr1
as.character(phenotypes_update.df$hormone) -> phenotypes_update.df$hormone
NA -> phenotypes_update.df[phenotypes_update.df$er1 == "missing", "er1"]
NA -> phenotypes_update.df[phenotypes_update.df$pr1 == "missing", "pr1"]
NA -> phenotypes_update.df[phenotypes_update.df$hormone == "missing", "hormone"]
as.numeric(phenotypes_update.df$er1) -> phenotypes_update.df$er1
as.numeric(phenotypes_update.df$pr1) -> phenotypes_update.df$pr1
as.numeric(phenotypes_update.df$hormone) -> phenotypes_update.df$hormone
str(phenotypes_update.df)
save.image(paste(interim_data_folder, "r01_read_and_clean_data_jan2017.RData", sep="/"))
ls()
sessionInfo()
Sys.time()
rm(list=ls())
# Time stamp
Sys.time()
# Folders
setwd("/scratch/medgen/scripts/wecare_stat_01.17/scripts")
interim_data_folder <- "/scratch/medgen/scripts/wecare_stat_01.17/interim_data"
# Thresholds for genotypes
min.gq <- 20
max.dp <- 500
# Variants call ratethreshold
min.call.rate <- 0.8
load(paste(interim_data_folder, "r01_read_and_clean_data_jan2017.RData", sep="/"))
dim(gt.mx)
class(gt.mx)
gt.mx[1:5,1:5]
dim(gq.mx)
class(gq.mx)
gq.mx[1:5,1:5]
dim(dp.mx)
class(dp.mx)
dp.mx[1:5,1:5]
dim(covar.df)
str(covar.df)
covar.df[1:5,1:5]
dim(samples.df)
str(samples.df)
samples.df[1:5,]
dim(demographics.df)
str(demographics.df)
demographics.df[1:5,1:5]
dim(phenotypes_update.df)
str(phenotypes_update.df)
phenotypes_update.df[1:5,1:5]
dim(BRCA1_BRCA2_PALB2_cases.df)
str(BRCA1_BRCA2_PALB2_cases.df)
BRCA1_BRCA2_PALB2_cases.df[1:5,1:5]
dim(vv.df)
str(vv.df)
vv.df[1:5,1:5]
dim(kgen.df)
str(kgen.df)
kgen.df[1:5,1:5]
dim(exac.df)
str(exac.df)
exac.df[1:5,1:5]
# Check consistence of rownames
sum(rownames(gt.mx) != rownames(gq.mx))
sum(rownames(gt.mx) != rownames(dp.mx))
sum(rownames(gt.mx) != rownames(vv.df))
sum(rownames(gt.mx) != rownames(kgen.df))
sum(rownames(gt.mx) != rownames(exac.df))
# Check consistence of colnames
sum(colnames(gt.mx) != colnames(gq.mx))
sum(colnames(gt.mx) != colnames(dp.mx))
# Fraction of NA genotypes before filtering
sum(is.na(gt.mx))/(dim(gt.mx)[1]*dim(gt.mx)[2]) # ~4%
# Call rates per variant before filtering
x <- ncol(gt.mx)
y <- apply(gt.mx,1,function(z){1-sum(is.na(z))/x})
hist(y, breaks=50, xlab=NULL, main="Call rates per variant before genotypes filtering")
# Histogram of gq  before filtering (when gt is not NA !)
hist(gq.mx[!is.na(gt.mx)], breaks=50, main="Histogram of gq in non-NA genotypes (before filtering)", xlab=NULL)
# Histogram of dp before filtering (when gt is not NA !)
hist(dp.mx[!is.na(gt.mx)], breaks=50, main="Histogram of dp in non-NA genotypes (before filtering)", xlab=NULL)
hist(dp.mx[!is.na(gt.mx)], breaks=2500, xlim=c(0,100), main="Histogram of dp in non-NA genotypes (before filtering, 0:100)", xlab=NULL)
rm(x,y)
# num of genotypes to be removed
sum(gq.mx < min.gq, na.rm=TRUE)
# Fraction of genotypes to be removed
sum(gq.mx < min.gq, na.rm=TRUE)/sum(!is.na(gq.mx)) # ~8%
# Apply filter (to gt only !)
NA -> gt.mx[ gq.mx < min.gq ]
# Clean up
rm(min.gq)
dim(gt.mx)
# Fraction of NA genotypes after filtering
sum(is.na(gt.mx))/(dim(gt.mx)[1]*dim(gt.mx)[2]) # ~12%
# Call rates per variant after gq filtering
x <- ncol(gt.mx)
y <- apply(gt.mx, 1, function(z){1-sum(is.na(z))/x})
hist(y, xlab=NULL, main="Histogram of call rates per variant after gt filtering")
# Histogram of gq  after gq filtering (when gt is not NA !)
hist(gq.mx[!is.na(gt.mx)], xlim=c(0,100), breaks=50, main="Histogram of gq in non NA genotypes (after gq filtering)", xlab=NULL)
View(vv.df)
# Histogram of dp after gt filtering (when gt is not NA !)
hist(dp.mx[!is.na(gt.mx)], breaks=50, main="Histogram of dp in non-NA genotypes (after gt filtering)", xlab=NULL)
hist(dp.mx[!is.na(gt.mx)], xlim=c(0,100), breaks=2500, main="Histogram of dp in non-NA genotypes (after gt filtering, 0:100)", xlab=NULL)
# Clean up
rm(x, y)
# num of genotypes to be removed
sum(dp.mx > max.dp, na.rm=TRUE)
# Fraction of genotypes to be removed (appr)
sum(dp.mx > max.dp, na.rm=TRUE)/sum(!is.na(gq.mx)) # <<1%
# Apply filter (to gt only !)
NA -> gt.mx[ dp.mx > max.dp ]
# Clean up
rm(max.dp)
dim(gt.mx)
# Fraction of NA genotypes after filtering
sum(is.na(gt.mx))/(dim(gt.mx)[1]*dim(gt.mx)[2]) # ~12%
# Call rates per variant after gq filtering
x <- ncol(gt.mx)
y <- apply(gt.mx, 1, function(z){1-sum(is.na(z))/x})
hist(y, xlab=NULL, main="Call rates per variant after gt+dp filtering")
# Histogram of gq  after gq+dp filtering (when gt is not NA !)
hist(gq.mx[!is.na(gt.mx)], xlim=c(0,100), breaks=50, main="Histogram of gq in non-NA genotypes (after gq+dp filtering)", xlab=NULL)
# Histogram of dp after gt filtering (when gt is not NA !)
hist(dp.mx[!is.na(gt.mx)], breaks=50, main="Histogram of dp after gt+dp filtering", xlab=NULL)
hist(dp.mx[!is.na(gt.mx)], xlim=c(0,100), breaks=500, main="Histogram of dp in non-NA genotypes (after gt+dp filtering, 0:100)", xlab=NULL)
# Clean up
rm(x, y)
# Estimate the proportion of variants to be removed
x <- ncol(gt.mx)
y <- apply(gt.mx, 1, function(z){1-sum(is.na(z))/x})
y[1:7]
var.retained <- y >= min.call.rate
sum(var.retained) # 283.651
1 - sum(var.retained)/nrow(gt.mx) # ~18%
# Remove variants with loaw call rates
gt.mx <- gt.mx[ var.retained, ]
dp.mx <- dp.mx[ var.retained, ]
gq.mx <- gq.mx[ var.retained, ]
vv.df <- vv.df[ var.retained, ]
kgen.df <- kgen.df[ var.retained, ]
exac.df <- exac.df[ var.retained, ]
# Clean-up
rm(min.call.rate, var.retained, x, y)
dim(gt.mx)
# Fraction of NA genotypes after filtering
sum(is.na(gt.mx))/(dim(gt.mx)[1]*dim(gt.mx)[2]) # ~8%
# Call rates per variant after filtering
x <- ncol(gt.mx)
y <- apply(gt.mx,1,function(z){1-sum(is.na(z))/x})
hist(y, xlim=c(0,1), breaks=10, xlab=NULL, main="Call rates per variant after gq+dp+cr genotypes filtering")
# Histogram of gq  after filtering (when gt is not NA !)
hist(gq.mx[!is.na(gt.mx)], xlim=c(0,100), breaks=50, main="Histogram of gq in non-NA genotypes (after gq+dp+cr filtering)", xlab=NULL)
# Histogram of dp  after filtering (when gt is not NA !)
hist(dp.mx[!is.na(gt.mx)], breaks=50, main="Histogram of dp in non-NA genotypes (after gq+dp+cr filtering)", xlab=NULL)
hist(dp.mx[!is.na(gt.mx)], breaks=500, xlim=c(0,100), main="Histogram of dp in non-NA genotypes (after gq+dp+cr filtering, 0:100)", xlab=NULL)
# Clean-up
rm(x, y)
mean(gq.mx, na.rm=TRUE)
mean(dp.mx, na.rm=TRUE)
rm(gq.mx, dp.mx)
dim(gt.mx)
class(gt.mx)
gt.mx[1:5,1:5]
dim(gq.mx)
library(SKAT)
power_480 <- Power_Logistic(
N.Sample.ALL = 480,
Case.Prop=0.5,
SubRegion.Length=3000,
Causal.MAF.Cutoff=0.03,
Causal.Percent= 20,
N.Sim=100,
MaxOR=2, OR.Type = "Fixed")
power_3731 <- Power_Logistic(
N.Sample.ALL = 3731,
Case.Prop=0.41,
SubRegion.Length=3000,
Causal.MAF.Cutoff=0.03,
Causal.Percent= 20,
N.Sim=100,
MaxOR=2, OR.Type = "Fixed")
power_480
power_3731
power_480 <- Power_Logistic(
N.Sample.ALL = 480,
Case.Prop=0.5,
SubRegion.Length=3000,
Causal.MAF.Cutoff=0.03,
Causal.Percent= 50,
N.Sim=100,
MaxOR=2, OR.Type = "Fixed")
power_3731 <- Power_Logistic(
N.Sample.ALL = 3731,
Case.Prop=0.41,
SubRegion.Length=3000,
Causal.MAF.Cutoff=0.03,
Causal.Percent= 50,
N.Sim=100,
MaxOR=2, OR.Type = "Fixed")
power_480
power_3731
power_480 <- Power_Logistic(
N.Sample.ALL = 480,
Case.Prop=0.5,
SubRegion.Length=3000,
Causal.MAF.Cutoff=0.05,
Causal.Percent= 50,
N.Sim=100,
MaxOR=2, OR.Type = "Fixed")
power_3731 <- Power_Logistic(
N.Sample.ALL = 3731,
Case.Prop=0.41,
SubRegion.Length=3000,
Causal.MAF.Cutoff=0.05,
Causal.Percent= 50,
N.Sim=100,
MaxOR=2, OR.Type = "Fixed")
power_480
power_3731
Power_Logistic
library(SKAT)
?Power_Logistic
library(plotly)
library(ggplot)
.libPath()
.libPaths()
.libPaths("/scratch/medgen/tools/r/R-3.3.2/lib64/R/library")
.libPaths()
library(ggplot)
library(plotly)
setwd("/scratch/medgen/scripts/wecare_stat_01.17/scripts")
# Start time
Sys.time()
# Folders
setwd("/scratch/medgen/scripts/wecare_stat_01.17/scripts")
interim_data_folder <- "/scratch/medgen/scripts/wecare_stat_01.17/interim_data"
# Load libraries
library(dplyr)
library(reshape2) # for melt()
library(ggplot2)
library(VennDiagram)
# Load data
load(paste(interim_data_folder, "r06b_exclude_egenvectors_outliers_wecare_nfe_jan2017.RData", sep="/"))
ls()
dim(wecare_nfe_genotypes.mx)
class(wecare_nfe_genotypes.mx)
wecare_nfe_genotypes.mx[1:5,1:5]
dim(wecare_nfe_phenotypes.df)
str(wecare_nfe_phenotypes.df)
wecare_nfe_phenotypes.df[1:5,1:5]
dim(wecare_nfe_variants.df)
colnames(wecare_nfe_variants.df)
wecare_nfe_variants.df[1:5,1:5]
dim(wecare_nfe_kgen.df)
colnames(wecare_nfe_kgen.df)
wecare_nfe_kgen.df[1:5,1:5]
dim(wecare_nfe_exac.df)
colnames(wecare_nfe_exac.df)
wecare_nfe_exac.df[1:5,1:5]
# Check consistency of rownames and colnames
sum(colnames(wecare_nfe_genotypes.mx) != rownames(wecare_nfe_phenotypes.df))
sum(rownames(wecare_nfe_genotypes.mx) != rownames(wecare_nfe_variants.df))
sum(rownames(wecare_nfe_genotypes.mx) != rownames(wecare_nfe_kgen.df))
sum(rownames(wecare_nfe_genotypes.mx) != rownames(wecare_nfe_exac.df))
